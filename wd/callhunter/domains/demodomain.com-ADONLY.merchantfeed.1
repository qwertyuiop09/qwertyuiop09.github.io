
// Файл настроек генерации фида мерчанта клиента

//Фиды генерируются раз в сутки по времени AdWords-аккаунта клиента
//Загружать фиды в мерчант нужно не реже чем раз в 30 дней, иначе реклама остановится
//Названия фидов начинаются с названия аккаунта в payments (включая ADONLY) для всех сайтов файла

[


	//настройки сканирования и парсинга одного сайта (начало блока)
	//можно копировать, изменяя значение ключа Id, если ручная нумерация Id
	{

		//'Id': '', // уникальный идентификатор сайта (значением может быть только строка или пусто)
					//автоматически назначается hostname из SITE (если параметр закомментиван или пустой)
					//можно указать любую строку символов, но тогда должен быть уникальный (если сайтов несколько)
					//если указать целочисленную Id-строку, то спереди автоматически будут добавлены две буквы: id
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

		'title': '', // название проекта/сайта (размещается в фиде)

//		'SITE': 'https://krepmarket.in.ua/p310532722-samorez-chernyj-derevu.html', // стартовая страница сканирования для одного сайта
//		'SITE': 'https://krepmarket.in.ua/p627837822-nabor-instrumentov-intertool.html', // стартовая страница сканирования для одного сайта
//		'SITE': 'https://krepmarket.in.ua/p303998090-shpilka-metricheskaya.html', // стартовая страница сканирования для одного сайта

		'SITE': 'https://krepmarket.in.ua/', // стартовая страница сканирования для одного сайта

//		'SITE': 'https://gillezo.in.ua/', // стартовая страница сканирования для одного сайта
//https://optika100.com.ua/


		'CHARSET': 'UTF-8', // если равен UTF-8 то пытаемся определять charset по заголовкам, иначе это жестко заданный чарсет

		'timeHours': 'test', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента
//		'timeHours': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента
//		'timeHours': '0', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента


		//'timeHours': '', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента
				//если закомментированы или пусто, то это 0 часов
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида
				//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра




		//'startDays': '', //дни месяца генерации фидов сайта (через запятую в строке)
				//может выполнять запуск генерации чаще чем указано, если это требуют отдельные фиды
				//если закомментировано или пусто, то генерация каждые сутки и при каждом запуске скрипта
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида




		//'doubleUrls': 1, //дублировать одинаковые ссылки в разных фидах сайта (если есть общие ссылки)
					//раскомментировать стоит только для сайтов конкурентов, не для оптимизации
					//для оптимизации создаем разные кампании на разных фидах, что бы не дублировать товары



		//'noDropShip': 1, //не добавлять в ссылку всех товаров сайта признак перехода по нашей рекламе (/?sodship=y)
				     //раскомментировать только! для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида
					
		//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
				     //добавлять в ссылку всех товаров сайта utm-метку перехода по нашей рекламе
				     //utm-метку лучше добавлять средствами гугл или яндекс
				     //в конец utmDropShip добавляется номер хеша фида
				     //раскомментировать можно, но не для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида



		//'priorityLev': 1, //уровень приоритета выполнения сканирования, закомментировано - 0,
				      //самый высокий приоритет - 0, если число уровня увеличивается - то сам приоритет уменьшается
				      //если приоритет одинаковый, то сайты сканирутся в порядке следования в этом конфиге
				      //сначала выполняются сканы с максимальным одинаковым приоритетом, затем остальные
				      //то есть сканы с минимальным приоритетом могут вообще не выполнится
				      //бросает все и сканирует более приоритетные сайты, затем продолжает скан остальных





		//'seed': 2166136261, //стартовое любое положительное целое число, используемое в генераторе Id для товаров (необязательно)
					//если настроен seed и сгенерированы Id, то не менять, иначе все Id товаров изменяться
					//генерация не используется, если Id ищется на страницах и нет поисковых РК
					//зачем менять - могут возникут совпадения (коллизии), тогда можно изменить, 
						//но во всех фидах поменяются Id и удаляться/пересоздадутся поисковые РК


		'valid_scheme': [	//если указано, то разрешаем только эти протоколы при сканировании страниц и редиректах
		//		'http',   //http только в случае, если нам зачем-то понадобился такой сайт
				'https',
				],



		//Общие ограничения сканирования (если задать некорректно, то можно не добраться до страниц для парсинга)
		//рекомендуется их включать, только если большой сайт, где каталог занимает небольшое число страниц
		//'skip_query': [ 	//не сканировать указанные значения начала pathname, путь без домена и без #
		//		'',
		//		'/print',
		//		],
		'only_query': [ 	//сканировать только указанные значения начала pathname, путь без домена и без #
		//		'/product_list',
				'/p',
				'/g',
				],
		//можно задать сложный анализ ограничений через функцию (при ответе 1 - разрешить сканировать)
		//нужно учитывать, что pathname - путь без домена и без #, можно применять parse_url(pathname)
		//'scanFun': function(pathname){ var parsed_url = parse_url(pathname); if (!parsed_url) return 0; pathname = parsed_url.protocol + parsed_url.hostname + parsed_url.port + parsed_url.pathname + parsed_url.search + parsed_url.hash; /*...*/ return 1},
		//'scanFun': function(pathname){ var parsed_url = parse_url(pathname); if (!parsed_url) return 0; if (/^(\/product_list)|(\/product_list\/page\_\d+)|(\/p\d+.*\.html)|(\/g\d+.*)$/.test(parsed_url.pathname)) { return 1 } else { return 0 } },
		'scanFun': function(pathname){ var parsed_url = parse_url(pathname); if (!parsed_url) return 0; if (/((\?)|(\&))bss0\=/.test(parsed_url.search)) { return 0 }; return 1 },

		//'scanSelectors': ['ul.b-product-gallery','div.b-nav__item-content','div.b-catalog-panel__pagination'], //массив составных селекторов - в каких селекторах страницы искать ссылки для скана и парсинга

		'notScanUrlsOnItemPages': 1, //не добавлять в скан urls со страниц, где найден товар хотя бы одного фида 


		//'skip_errors': [      //эти ошибки считать нормальным ответом (если много страниц с таким ответом)
		//		404,
		//		],
		//'repeat_errors': [    //для этих ошибок повторно делать запрос согласно MAX_TRIES (если сайт перегружен например)
		//		503,
		//		0,  	//наверно это когда nginx временно блокирует ip (отказ в обслуживании)
		//		],
		//'REQUEST_DELAY': 300,	//если возникает ошибка 0 (отказ в обслуживании) и мало страниц обрабатывается, то поиграться с задержкой (хотя проше отказаться)
		//'IGNORE_EMPTY_CONTENT_TYPE': false, //если много страниц с ошибкой "пустой content-type"
		//'MAX_CHECKED_URLS': 5, //максимальное кол-во ссылок для скана (в том числе редиректов), что бы отключить - закомментировать или 0



		//настройки одного фида (начало блока)
		//можно копировать, изменяя значение ключа (id0) в хеше фида и значение параметра в его хеше 'ext'
		"id0":{
			//'ext': '', // уникальное расширение файла фида в пределах одного сайта (если фидов несколько в сайте)
					//автоматически назначается значение ключа хеша этого фида
					//можно указать что-то другое, но тогда должен быть уникальный (если фидов несколько в сайте)
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

			//'timeHours': '', //часы генерации фида сайта (через запятую) по времени AdWords-аккаунта клиента
					//если закомментированы, то совпадают с часами генерации сайта
					//если пусто, то это 0 часов
					//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра




			//'startDays': '', //дни месяца генерации фида (через запятую в строке)
					//если закомментированы, то совпадают с днями генерации (startDays) сайта
					//если пусто, то генерируем фид каждые сутки и при каждом запуске скрипта



			//'file_type': ['.ga.xml'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'])
			//'file_type': ['.html','.ga.xml', '.ga.txt', '.ga.tsv'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'])
			'file_type': ['.html','.ga.xml', '.ga.txt'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'])
					     	//параметр используется, если закомментирован аналогичный параметр поля
						//в настоящий момент поддерживаются ['.html','.ga.xml','.ga.csv']

			'htmlencode': 0, // восстанавливать html-сущности и не вставлять CDATA в значение поля (для csv всегда 0 и CDATA не вставляется)
					//html-сущности удаляются при парсинге страниц товара
					//и восстанавливаются перед записью в файл, если htmlencode 1, иначе вставляется CDATA.
					//CDATA вставляется только если есть html-сущности в значении поля.
				     	//параметр используется, если закомментирован аналогичный параметр поля фида



			//'noDropShip': 1, //не добавлять в ссылку всех товаров фида сайта признак перехода по нашей рекламе (/?sodship=y)
						//можно раскомментировать только! для сайтов конкурентов
						//если закомментирован, то совпадает с noDropShip сайта



			'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
					     //добавлять в ссылку всех товаров фида сайта utm-метку перехода по нашей рекламе
					     //utm-метку лучше добавлять средствами гугл или яндекс
					     //в конец utmDropShip добавляется номер хеша фида
					     //раскомментировать можно, но не для сайтов конкурентов
					     //если закомментирован, то совпадает с utmDropShip сайта

			//'ftp': { login: 'test', password: 'test', host: 'storage4.thehost.com.ua', directory: '/', passive_mode: 1, ssl_mode: 0, files_types: ['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'], createzip: 0, zipfilename: ''},
			//'ftp': { login: 'login', password: 'password', host: 'host.com', directory: '/', passive_mode: 1, ssl_mode: 0, files_types: ['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'], createzip: 1, zipfilename: ''},
				 //параметры передачи заархивированных фидов по фтп (например, для отслеживания цен конкурентов)
				       //после создания фида передавать его по фтп
				 //passive_mode рекомендуется всегда включать
				 //createzip передавать архивом - 1, или неархивированные файлы - 0
				 //название zip используется IdName.Id.feed.[feedId|ext].zip (как в названии файла фида)
					//либо если есть непустое уникальное zipfilename (среди любых фидов аккаунта)
				 //files_types - фиды с какими расширениями передавать, используем один или несколько типов ['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv']



			//Общие ограничения парсинга
			//'skip_parse': [ 	//не парсить указанные значения начала pathname, путь без домена и без #
			//		'',
			//		'/product_list',
			//		],
			//'only_parse': [ 	//парсить только указанные значения начала pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],

			'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; if (/^\/p\d+.*\.html$/.test(parsed_url.pathname)) { return 1 } else { return 0 } },
			//'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; url = parsed_url.protocol + parsed_url.hostname + parsed_url.port + parsed_url.pathname + parsed_url.search + parsed_url.hash; /*...*/ return 1},
					//можно задать сложный анализ ограничений парсинга фида через функцию (при ответе 1 - разрешить парсить)
					//например, что бы сохранять по шаблону только нужные ссылки парсинга товара
					//нужно учитывать, что url включает протокол и домен, можно применять parse_url(url)
					//вызывается до парсинга


			//'checkFieldsFun': function(fields,url){ if (fields && (fields['product_type'] == '/*...*/' ))  return 1},
					//перед записью готовой карточки товара можно сделать анализ полей (при ответе 1 - разрешить запись)
					//например, что бы записывать только определенные категории товаров
					//вызывается после парсинга, если все поля удовлетворяют условиям


			//'MAX_ADD_URLS': 2, //максимальное кол-во ссылок для добавления при парсинге при тестировании фида, что бы отключить - закомментировать или 0






			"id0":{
				"field_name": 'id',
				//"field_value_selector": 'Id',
				"field_type": 'id',
				//"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 50,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return selector; },
				//'keyword': 'KeyWord',
			},




			"id1":{
				"field_name": 'title',
				"field_value_selector": 'html body.b-layout div.b-layout__container.b-layout__container_type_main div.b-layout__content div.b-content.b-content__body.qa-main-info-product div.b-product h1.b-product__name.b-online-edit span',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 150,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id2":{
				"field_name": 'description',
				"field_value_selector": 'html body.b-layout div.b-layout__container.b-layout__container_type_main div.b-layout__content div.b-content.b-content__body.qa-main-info-product div.b-online-edit.h-mt-40 div.b-user-content p',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 5000,
				"field_replace": ['\\<\\/?\\w[^\\<\\>]*\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},


			"id3":{
				"field_name": 'link',
				//"field_value_selector": '.class4 > tag:nth-child(1)',
				"field_type": 'url',
				//"parsing_type": '',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},




			"id4":{
				"field_name": 'image_link',
				"field_value_selector": 'img.b-product-view__image',
				"field_type": 'html',
				"parsing_type": 'src',
//				"field_required": 1,
				"field_required": 0,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},



			"id5":{
//сайт без тега отслеживания наличия товара (все товары якобы в наличии)
				"field_name": 'availability',
				"field_value_selector": 'in stock',
				"field_type": 'fixed',
				//"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ if (html == 'Нет в наличии') { return 'out of stock'; } else { return 'in stock'; } }, 
				//'keyword': 'KeyWord',
			},




			"id6":{
				"field_name": 'price',
				"field_value_selector": '.b-product-cost__price',
				"field_type": 'price',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['^\\<[^\\>\\<]*\\>([^\\>\\<]*)(?:(?:\\<[^\\>\\<]*\\>[^\\>\\<]*\\<[^\\>\\<]*\\>)|\s+)([^\\>\\<]*).*$', '$1 $2'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' UAH'; }, 
				//'keyword': 'KeyWord',
			},






			"id10":{

				"field_name": 'product_type_1',
				"field_value_selector": 'li.b-path__item:nth-child(3) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},




			"id11":{

				"field_name": 'product_type_2',
				"field_value_selector": 'li.b-path__item:nth-child(4) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id12":{

				"field_name": 'product_type_3',
				"field_value_selector": 'li.b-path__item:nth-child(5) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id13":{

				"field_name": 'product_type_4',
				"field_value_selector": 'li.b-path__item:nth-child(6) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},




			"id15":{

				"field_name": 'product_type',
				//"field_value_selector": '',
				"field_type": ['product_type_1,product_type_2,product_type_3,product_type_4',' > '],
				//"parsing_type": 'text',
				"field_required": 2,
				"multifield_name": 'product_type',
				"field_visible": 1,
				"field_length": 750,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},




		},
		//настройки одного фида (конец блока)






	},
	//настройки сканирования и парсинга одного сайта (конец блока)



/*

	//настройки сканирования и парсинга одного сайта (начало блока)
	//можно копировать, изменяя значение ключа Id, если ручная нумерация Id
	{

		//'Id': '', // уникальный идентификатор сайта (значением может быть только строка или пусто)
					//автоматически назначается hostname из SITE (если параметр закомментиван или пустой)
					//можно указать что-то другое, но тогда должен быть уникальный (если сайтов несколько)
					//если указать целочисленную Id-строку, то спереди автоматически будут добавлены две буквы: id
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

		'title': '', // название проекта/сайта (размещается в фиде)

		'SITE': 'https://krepmarket.in.ua', // стартовая страница сканирования для одного сайта
		'CHARSET': 'UTF-8', // если равен UTF-8 то пытаемся определять charset по заголовкам, иначе это жестко заданный чарсет

		'timeHours': 'test',

		//'timeHours': '', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента
				//если закомментированы или пусто, то это 0 часов
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида
				//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра




		//'startDays': '', //дни месяца генерации фидов сайта (через запятую в строке)
				//может выполнять запуск генерации чаще чем указано, если это требуют отдельные фиды
				//если закомментировано или пусто, то генерация каждые сутки и при каждом запуске скрипта
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида




		//'doubleUrls': 1, //дублировать одинаковые ссылки в разных фидах сайта (если есть общие ссылки)
					//раскомментировать стоит только для сайтов конкурентов, не для оптимизации
					//для оптимизации создаем разные кампании на разных фидах, что бы не дублировать товары



		//'noDropShip': 1, //не добавлять в ссылку всех товаров сайта признак перехода по нашей рекламе (/?sodship=y)
				     //раскомментировать только! для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида
					
		//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
				     //добавлять в ссылку всех товаров сайта utm-метку перехода по нашей рекламе
				     //utm-метку лучше добавлять средствами гугл или яндекс
				     //в конец utmDropShip добавляется номер хеша фида
				     //раскомментировать можно, но не для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида

//		'priorityLev': 1, //уровень приоритета выполнения сканирования, закомментировано - 0,


		//'priorityLev': 1, //уровень приоритета выполнения сканирования, закомментировано - 0,
				      //самый высокий приоритет - 0, если число уровня увеличивается - то сам приоритет уменьшается
				      //если приоритет одинаковый, то сайты сканирутся в порядке следования в этом конфиге
				      //сначала выполняются сканы с максимальным одинаковым приоритетом, затем остальные
				      //то есть сканы с минимальным приоритетом могут вообще не выполнится
				      //бросает все и сканирует более приоритетные сайты, затем продолжает скан остальных



		//настройки одного фида (начало блока)
		//можно копировать, изменяя значение ключа (id0) в хеше фида и значение параметра в его хеше 'ext'
		"id0":{
			//'ext': '', // уникальное расширение файла фида в пределах одного сайта (если фидов несколько в сайте)
					//автоматически назначается значение ключа хеша этого фида
					//можно указать что-то другое, но тогда должен быть уникальный (если фидов несколько в сайте)
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

			//'timeHours': '', //часы генерации фида сайта (через запятую) по времени AdWords-аккаунта клиента
					//если закомментированы, то совпадают с часами генерации сайта
					//если пусто, то это 0 часов
					//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра




			//'startDays': '', //дни месяца генерации фида (через запятую в строке)
					//если закомментированы, то совпадают с днями генерации (startDays) сайта
					//если пусто, то генерируем фид каждые сутки и при каждом запуске скрипта



			'file_type': ['.ga.xml'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'])
					     	//параметр используется, если закомментирован аналогичный параметр поля
						//в настоящий момент поддерживаются ['.html','.ga.xml','.ga.csv']

			'htmlencode': 0, // восстанавливать html-сущности и не вставлять CDATA в значение поля (для csv всегда 0 и CDATA не вставляется)
					//html-сущности удаляются при парсинге страниц товара
					//и восстанавливаются перед записью в файл, если htmlencode 1, иначе вставляется CDATA.
					//CDATA вставляется только если есть html-сущности в значении поля.
				     	//параметр используется, если закомментирован аналогичный параметр поля фида



			//'noDropShip': 1, //не добавлять в ссылку всех товаров фида сайта признак перехода по нашей рекламе (/?sodship=y)
						//можно раскомментировать только! для сайтов конкурентов
						//если закомментирован, то совпадает с noDropShip сайта



			//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
					     //добавлять в ссылку всех товаров фида сайта utm-метку перехода по нашей рекламе
					     //utm-метку лучше добавлять средствами гугл или яндекс
					     //в конец utmDropShip добавляется номер хеша фида
					     //раскомментировать можно, но не для сайтов конкурентов
					     //если закомментирован, то совпадает с utmDropShip сайта



			//'ftp': { login: 'login', password: 'password', host: 'host.com', directory: '/', passive_mode: 1, ssl_mode: 0, files_types: ['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'], createzip: 1, zipfilename: ''},
				 //параметры передачи заархивированных фидов по фтп (например, для отслеживания цен конкурентов)
				       //после создания фида передавать его по фтп
				 //passive_mode рекомендуется всегда включать
				 //createzip передавать архивом - 1, или неархивированные файлы - 0
				 //название zip используется IdName.Id.feed.[feedId|ext].zip (как в названии файла фида)
					//либо если есть непустое уникальное zipfilename (среди любых фидов аккаунта)
				 //files_types - фиды с какими расширениями передавать, используем один или несколько типов ['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv']




			//Общие ограничения парсинга
			//'skip_parse': [ 	//не парсить указанные pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],
			//'only_parse': [ 	//парсить только указанные pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],



			//'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; url = parsed.protocol + parsed.hostname + parsed.port + parsed.pathname + parsed.search + parsed.hash;  return 1},
					//можно задать сложный анализ ограничений парсинга фида через функцию (при ответе 1 - разрешить парсить)
					//например, что бы сохранять по шаблону только нужные ссылки парсинга товара
					//нужно учитывать, что url включает протокол и домен, можно применять parse_url(url)
					//вызывается до парсинга


			//'checkFieldsFun': function(fields,url){ if (fields && (fields['product_type'] == '...' ))  return 1},
					//перед записью готовой карточки товара можно сделать анализ полей (при ответе 1 - разрешить запись)
					//например, что бы записывать только определенные категории товаров
					//вызывается после парсинга, если все поля удовлетворяют условиям

			//'MAX_ADD_URLS': 20, //максимальное кол-во ссылок для добавления при парсинге при тестировании фида, что бы отключить - закомментировать или 0



			"GASearch": { //параметры поисковой РК аккаунта AdWords, где рекламируются товары фида

					//формируются на основе значений полей фида

					//РК может быть совмещенной (поиск+КМС)
					//генерируются объявления и слова и отслеживается наличие товаров, изменения объявлений и базовых ключевых слов
					//на основе уникальных url товара и названия (останавливаем/включаем/удаляем/изменяем группу товара)
					//Не более 20 000 групп объявлений в кампании, поэтому в одном фиде должно быть не более 20000 товаров
					//Если Id закомменттрован, то не управляем РК


					//'Id': '', //идентификатор поисковой кампании аккаунта AdWords, где рекламируются товары фида
						    //Если Id закомментирован, то не управляем РК



					'keyword': 'KeyWord', //регистр слов в объявлениях, допустимы KeyWord и Keyword. Как вставлять текст если поле текстовое (KeyWord - заглавные буквы в каждом слове и Keyword - заглавные буквы в начале предложения)
								//если закомментировано, то не используется (берется полученное значение как есть)


					'priceRound': 100, //Начиная с какой цены отбрасывать дробную часть цены
							  //если закомментировано, то не отбрасывать


					'startbid': 5, //стартовое значение ставки в кампании или группе
							//устанавливается при создании кампании (тег MCLSET1:2:basebid) или ставка группы при ее создании
							//после создания кампании можно изменять только сам тег MCLSET1:2:... в аккаунте (ставка группы меняется автоматически)


					'addkeystype': 4, //тип добавления КС
								//0 - только цифровые КС
								//1 - только цифровые КС и КС из 3-х слов
								//2 - только КС из 3-х слов
								//3 - цифровые КС, КС из 3-х слов и КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)
								//4 - цифровые КС, КС из 3-х слов и в случае, если все слова имеют статус "мало показов", дополнительно добавлять КС из 2-х слов

								//если изменится тип добавления КС, то автоматически удаляются КС, которых не должны быть в новом варианте,
								//восстанавливается видимость существующих разрешенных и добавляются отсутствующие КС


					'powerControl': 1, // 1 - включать кампанию, если нет ошибок после создания
							    // 0 - не контролировать активность кампании
							    //в случае ошибок кампания приостанавливается автоматически (так как изменения делаются на действующей кампании)



					//ниже описаны 2 типа поведения страниц при отсутствии товара (исчезают или ставят метку "нет в наличии")

					//'removeNotFoundItem': 1, //0 - отключать ads-группы товаров, которых нет в фиде
								  //1 - удалять ads-группы товаров, которых нет в фиде
								  //параметр удаляет группы если страницы "исчезают" на сайте, не показываются при отсутствии товара


					'removeOutOfStockItem': [0, 'availability', ['out of stock', 'in stock']],
								//0 - отключать ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
								//1 - удалять ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
								//значения массива: флаг, название поля, пометка "нет в наличии" в фиде, пометка "в наличии" в фиде
								//нужно правильно задать генерируемое поле и все его значения, иначе выдаст ошибку
								//либо закомментировать, тогда не будет искать и останавливать/удалять группы по такому полю товара
								//параметр удаляет/приостанавливает группы если на страницах появляется пометка "нет в наличии" при отсутствии товара



					//дальше используется однотипный вариант значения параметра для формирования строки разбора/парсинга текстовых параметров РК поиска
					//['фиксированое значение до поля',['field_name1','field_name2',...],'фиксированое значение после поля']
					//как формируется значение текстового параметра РК:
						//при наличии значений массива производится их конкатенация через пробел слева направо
					//то есть:
						//фикс.знач.до. + ' ' + значение поля1 фида + (' ' + каждое след. поле фида) + ' ' + фикс.знач.после.
					//Обновление ads-группы товара выполняется после формирования записи товара в фиде,
						//когда все значения полей уже определены
					//могут использоватся значения любых полей фида (в т.ч. скрытых)


					'url': ['',['link']], //url, ссылка парсинга товара
								//хотя бы одно указанное поле должно быть обязательным в фиде



					'keys': ['',['title']],
						//поля, из которых формируются ключевые слова (обычно совпадает с параметром РК header)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//его формирование обычно происходит на основе того же поля, что в параметре(ах) header,
						//иначе, в фикс.значениях и значениях полей не стоит использовать разделители [.,|!()], только пробел,
						//а также нужно учитывать что первые два длинных слова будут по очереди стартовыми в каждом КС
						//то есть, если мы укажем, например, ['коляска прогулочная',['field_name'],'новая']
							//то во всех товарах получим все КС (за исключение цифровых) /+коляска .../ и /+прогулочная .../



					//'fixedkeys': ['kia киа хендай',[],''], //обязательные слова в КС (через пробел и/или запятую)
										//всегда добавляются во все КС (по одному значению)



					'header': ['',['title']],
						//поля, из которых формируются заголовки и пути для объявлений ads-группы товара (обычно это название товара)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//размещается в 2-х заголовках (3-й не используется в объявлениях)
					     	//используется, если закомментирован аналогичный параметр в объявлениях



					'price': ['',['GASprice']],
						//параметр цены в заголовках и описании
						//должно быть очищено от лишнего (только цена (цифры,запятые,точки), валюта и возможен в конце разделитель[.,|!], можно все без пробелов)
						//Размещается во 2-м заголовке. Перед ценой помещается разделитель " | " (если уже заполнено начало 2-го заголовка) и убирается после цены существующий разделитель [,|!]
						//Размещается в описании. После цены в описании помещается разделитель [,] если нет одного из [.,|!]
						//Если не помещается во 2-м поле заголовка, обрезается полностью в заголовке
						//Если не помещается в полях описания, обрезается полностью в описании вместе с beforeprice
					     	//используется, если закомментирован аналогичный параметр в объявлениях



					//Последовательность размещения параметров РК в заголовках объявлений:
					//header, price (price может отсутствовать в заголовках - зависит от priceaddtype)

					//Последовательность размещения параметров в полях описания объявления:
					//startdescription, beforeprice, price, afterprice, description, afterdescription
					//Контролируется наличие одного восклицательного знака во всем описании (останется первый с левой стороны)



					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id0":{


						'priceaddtype': 1, //куда в объявлении вставить цену
							//0 - пытаемся добавить цену в заголовки и описание
							//1 - пытаемся добавить цену в заголовки, если не получилось, то добавляем в описание (не добавляем beforeprice, если не добавляем цену в описание)
							//2 - пытаемся добавить цену в только в заголовки (не добавляем beforeprice)
							//3 - пытаемся добавить цену в только в описание


						//'startdescription': ['','',''],
							//параметр в самом начале описания, перед другими параметрами, перед beforeprice и др.
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'beforeprice': ['В наличии по цене'],
							//параметр перед ценой в описании
							//не добавляется в описание, если пустое значение цены
							//В конце автоматически не добавляется знак . что бы можно было вставить типа "По цене от" или "В наличии за"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания



						'afterprice': ['Лучшая цена, удобная доставка!'],
							//параметр после цены в описании (акция)
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//например, "Лучшая цена, удобная доставка!"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'description': ['',['description']],
							//параметр после цены и акции в описании (само описание)
							//В конце автоматически добавляется знак . (если дальше есть завершающий параметр описания и если в конце описания нет одного из [.,|!])
							//Если значение имен полей равно null, то автоматически берется текст из заголовков
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'afterdescription': ['Звоните сейчас!'],
							//параметр после самого описания в описании (завершающий текст описания)
							//Если не помещается в полях описания, обрезается полностью в описании
							//например, "Звоните сейчас!"



						//'header': ['',['title']],
							//поля, из которых формируются заголовки и пути объявлений ads-группы товара (обычно это название товара)
							//если закомментирован, то совпадают с аналогичным параметром РК


						//'price': ['',['GASprice']],
							//параметр цены в заголовках и описании
							//если закомментирован, то совпадают с аналогичным параметром РК




					},
					//настройки одного объявления (конец блока)





			},
			//конец настроек поисковой кампании






			"id0":{
				"field_name": 'id',
				//"field_value_selector": 'Id',
				"field_type": 'id',
				//"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 50,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return selector; },
				//'keyword': 'KeyWord',
			},

			"id1":{
				"field_name": 'title',
				"field_value_selector": '.class > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 150,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id2":{
				"field_name": 'description',
				"field_value_selector": '.class2 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 5000,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id3":{
				"field_name": 'link',
				//"field_value_selector": '.class4 > tag:nth-child(1)',
				"field_type": 'url',
				//"parsing_type": '',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},


			"id4":{
				"field_name": 'image_link',
				"field_value_selector": '.class5 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'src',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},



			"id5":{
//сайт без тега отслеживания наличия товара (все товары якобы в наличии)
				"field_name": 'availability',
				"field_value_selector": 'in stock',
				"field_type": 'fixed',
				//"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ if (html == 'Нет в наличии') { return 'out of stock'; } else { return 'in stock'; } }, 
				//'keyword': 'KeyWord',
			},




			"id6":{
				"field_name": 'price',
				"field_value_selector": '.class7 > tag:nth-child(1)',
				"field_type": 'price',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' UAH'; }, 
				//'keyword': 'KeyWord',
			},


			"id61":{
//поле для передачи цены в рекламу, невидимое в фиде
				"field_name": 'GASprice',
				"field_value_selector": '.class7 > tag:nth-child(1)',
				"field_type": 'nativeprice',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' грн.'; }, 
				//'keyword': 'KeyWord',
			},




			"id10":{

				"field_name": 'product_type_1',
				"field_value_selector": '.class10 > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id11":{

				"field_name": 'product_type_2',
				"field_value_selector": '.class10 > a:nth-child(2)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},




			"id12":{

				"field_name": 'product_type',
				//"field_value_selector": '',
				"field_type": ['product_type_1,product_type_2',' > '],
				//"parsing_type": 'text',
				"field_required": 3,
				"field_visible": 1,
				"field_length": 750,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},



		},
		//настройки одного фида (конец блока)



		//'seed': 2166136261, //стартовое любое положительное целое число, используемое в генераторе Id для товаров (необязательно)
					//если настроен seed и сгенерированы Id, то не менять, иначе все Id товаров изменяться
					//генерация не используется, если Id ищется на страницах и нет поисковых РК
					//зачем менять - могут возникут совпадения (коллизии), тогда можно изменить, 
						//но во всех фидах поменяются Id и удаляться/пересоздадутся поисковые РК


		'valid_scheme': [	//если указано, то разрешаем только эти протоколы при сканировании страниц и редиректах
		//		'http',   //http только в случае, если нам зачем-то понадобился такой сайт
				'https',
				],


		//Общие ограничения сканирования (если задать некорректно, то можно не добраться до страниц для парсинга)
		//рекомендуется их включать, только если большой сайт, где каталог занимает небольшое число страниц
		//'skip_query': [ 	//не сканировать указанные pathname, путь без домена и без #
		//		'',
		//		'/print',
		//		],
		//'only_query': [ 	//сканировать только указанные pathname, путь без домена и без #
		//		'',
		//		'/print',
		//		],
		//можно задать сложный анализ ограничений через функцию (при ответе 1 - разрешить сканировать)
		//нужно учитывать, что query - путь без домена и без #, можно применять parse_url(query)
		//'scanFun': function(query){ var parsed_url = parse_url(query); if (!parsed_url) return 0; query = parsed.pathname + parsed.search; ... return 1},



		//'skip_errors': [      //эти ошибки считать нормальным ответом (если много страниц с таким ответом)
		//		404,
		//		],
		//'repeat_errors': [    //для этих ошибок повторно делать запрос согласно MAX_TRIES (если сайт перегружен например)
		//		503,
		//		0,  	//наверно это когда nginx временно блокирует ip (отказ в обслуживании)
		//		],
		//'REQUEST_DELAY': 300,	//если возникает ошибка 0 (отказ в обслуживании) и мало страниц обрабатывается, то поиграться с задержкой (хотя проше отказаться)
		//'IGNORE_EMPTY_CONTENT_TYPE': false, //если много страниц с ошибкой "пустой content-type"
		'MAX_CHECKED_URLS': 10, //максимальное кол-во ссылок для скана (в том числе редиректов), что бы отключить - закомментировать или 0





	},
	//настройки сканирования и парсинга одного сайта (конец блока)

*/


	//настройки сканирования и парсинга одного сайта (начало блока)
	//можно копировать, изменяя значение ключа Id, если ручная нумерация Id
	{

		//'Id': '', // уникальный идентификатор сайта (значением может быть только строка или пусто)
					//автоматически назначается hostname из SITE (если параметр закомментиван или пустой)
					//можно указать что-то другое, но тогда должен быть уникальный (если сайтов несколько)
					//если указать целочисленную Id-строку, то спереди автоматически будут добавлены две буквы: id
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

		'title': '', // название проекта/сайта (размещается в фиде)

		'SITE': 'https://example2.com', // стартовая страница сканирования для одного сайта
		'CHARSET': 'UTF-8', // если равен UTF-8 то пытаемся определять charset по заголовкам, иначе это жестко заданный чарсет

		'timeHours': 'test',

		//'timeHours': '', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента
				//если закомментированы или пусто, то это 0 часов
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида
				//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра




		//'startDays': '', //дни месяца генерации фидов сайта (через запятую в строке)
				//может выполнять запуск генерации чаще чем указано, если это требуют отдельные фиды
				//если закомментировано или пусто, то генерация каждые сутки и при каждом запуске скрипта
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида




		//'doubleUrls': 1, //дублировать одинаковые ссылки в разных фидах сайта (если есть общие ссылки)
					//раскомментировать стоит только для сайтов конкурентов, не для оптимизации
					//для оптимизации создаем разные кампании на разных фидах, что бы не дублировать товары



		//'noDropShip': 1, //не добавлять в ссылку всех товаров сайта признак перехода по нашей рекламе (/?sodship=y)
				     //раскомментировать только! для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида
					
		//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
				     //добавлять в ссылку всех товаров сайта utm-метку перехода по нашей рекламе
				     //utm-метку лучше добавлять средствами гугл или яндекс
				     //в конец utmDropShip добавляется номер хеша фида
				     //раскомментировать можно, но не для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида




		//'priorityLev': 1, //уровень приоритета выполнения сканирования, закомментировано - 0,
				      //самый высокий приоритет - 0, если число уровня увеличивается - то сам приоритет уменьшается
				      //если приоритет одинаковый, то сайты сканирутся в порядке следования в этом конфиге
				      //сначала выполняются сканы с максимальным одинаковым приоритетом, затем остальные
				      //то есть сканы с минимальным приоритетом могут вообще не выполнится
				      //бросает все и сканирует более приоритетные сайты, затем продолжает скан остальных



		//настройки одного фида (начало блока)
		//можно копировать, изменяя значение ключа (id0) в хеше фида и значение параметра в его хеше 'ext'
		"id0":{
			//'ext': '', // уникальное расширение файла фида в пределах одного сайта (если фидов несколько в сайте)
					//автоматически назначается значение ключа хеша этого фида
					//можно указать что-то другое, но тогда должен быть уникальный (если фидов несколько в сайте)
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

			//'timeHours': '', //часы генерации фида сайта (через запятую) по времени AdWords-аккаунта клиента
					//если закомментированы, то совпадают с часами генерации сайта
					//если пусто, то это 0 часов
					//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра




			//'startDays': '', //дни месяца генерации фида (через запятую в строке)
					//если закомментированы, то совпадают с днями генерации (startDays) сайта
					//если пусто, то генерируем фид каждые сутки и при каждом запуске скрипта





			'file_type': ['.ga.xml'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'])
					     	//параметр используется, если закомментирован аналогичный параметр поля
						//в настоящий момент поддерживаются ['.html','.ga.xml','.ga.csv']

			'htmlencode': 0, // восстанавливать html-сущности и не вставлять CDATA в значение поля (для csv всегда 0 и CDATA не вставляется)
					//html-сущности удаляются при парсинге страниц товара
					//и восстанавливаются перед записью в файл, если htmlencode 1, иначе вставляется CDATA.
					//CDATA вставляется только если есть html-сущности в значении поля.
				     	//параметр используется, если закомментирован аналогичный параметр поля фида



			//'noDropShip': 1, //не добавлять в ссылку всех товаров фида сайта признак перехода по нашей рекламе (/?sodship=y)
						//можно раскомментировать только! для сайтов конкурентов
						//если закомментирован, то совпадает с noDropShip сайта



			//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
					     //добавлять в ссылку всех товаров фида сайта utm-метку перехода по нашей рекламе
					     //utm-метку лучше добавлять средствами гугл или яндекс
					     //в конец utmDropShip добавляется номер хеша фида
					     //раскомментировать можно, но не для сайтов конкурентов
					     //если закомментирован, то совпадает с utmDropShip сайта



			//'ftp': { login: 'login', password: 'password', host: 'host.com', directory: '/', passive_mode: 1, ssl_mode: 0, files_types: ['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv'], createzip: 1, zipfilename: ''},
				 //параметры передачи заархивированных фидов по фтп (например, для отслеживания цен конкурентов)
				       //после создания фида передавать его по фтп
				 //passive_mode рекомендуется всегда включать
				 //createzip передавать архивом - 1, или неархивированные файлы - 0
				 //название zip используется IdName.Id.feed.[feedId|ext].zip (как в названии файла фида)
					//либо если есть непустое уникальное zipfilename (среди любых фидов аккаунта)
				 //files_types - фиды с какими расширениями передавать, используем один или несколько типов ['.html','.ga.xml','.ga.csv','.yml.xml','.yrl.xml','.ycar.xml','.ya.csv']


			//Общие ограничения парсинга
			//'skip_parse': [ 	//не парсить указанные pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],
			//'only_parse': [ 	//парсить только указанные pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],



			//'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; url = parsed.protocol + parsed.hostname + parsed.port + parsed.pathname + parsed.search + parsed.hash; ... return 1},
					//можно задать сложный анализ ограничений парсинга фида через функцию (при ответе 1 - разрешить парсить)
					//например, что бы сохранять по шаблону только нужные ссылки парсинга товара
					//нужно учитывать, что url включает протокол и домен, можно применять parse_url(url)
					//вызывается до парсинга


			//'checkFieldsFun': function(fields,url){ if (fields && (fields['product_type'] == '...' ))  return 1},
					//перед записью готовой карточки товара можно сделать анализ полей (при ответе 1 - разрешить запись)
					//например, что бы записывать только определенные категории товаров
					//вызывается после парсинга, если все поля удовлетворяют условиям

			//'MAX_ADD_URLS': 20, //максимальное кол-во ссылок для добавления при парсинге при тестировании фида, что бы отключить - закомментировать или 0




			"GASearch": { //параметры поисковой РК аккаунта AdWords, где рекламируются товары фида

					//формируются на основе значений полей фида

					//РК может быть совмещенной (поиск+КМС)
					//генерируются объявления и слова и отслеживается наличие товаров, изменения объявлений и базовых ключевых слов
					//на основе уникальных url товара и названия (останавливаем/включаем/удаляем/изменяем группу товара)
					//Не более 20 000 групп объявлений в кампании, поэтому в одном фиде должно быть не более 20000 товаров
					//Если Id закомменттрован, то не управляем РК


					//'Id': '', //идентификатор поисковой кампании аккаунта AdWords, где рекламируются товары фида
						    //Если Id закомментирован, то не управляем РК



					'keyword': 'KeyWord', //регистр слов в объявлениях, допустимы KeyWord и Keyword. Как вставлять текст если поле текстовое (KeyWord - заглавные буквы в каждом слове и Keyword - заглавные буквы в начале предложения)
								//если закомментировано, то не используется (берется полученное значение как есть)


					'priceRound': 100, //Начиная с какой цены отбрасывать дробную часть цены
							  //если закомментировано, то не отбрасывать


					'startbid': 5, //стартовое значение ставки в кампании или группе
							//устанавливается при создании кампании (тег MCLSET1:2:basebid) или ставка группы при ее создании
							//после создания кампании можно изменять только сам тег MCLSET1:2:... в аккаунте (ставка группы меняется автоматически)


					'addkeystype': 4, //тип добавления КС
								//0 - только цифровые КС
								//1 - только цифровые КС и КС из 3-х слов
								//2 - только КС из 3-х слов
								//3 - цифровые КС, КС из 3-х слов и КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)
								//4 - цифровые КС, КС из 3-х слов и в случае, если все слова имеют статус "мало показов", дополнительно добавлять КС из 2-х слов

								//если изменится тип добавления КС, то автоматически удаляются КС, которых не должны быть в новом варианте,
								//восстанавливается видимость существующих разрешенных и добавляются отсутствующие КС


					'powerControl': 1, // 1 - включать кампанию, если нет ошибок после создания
							    // 0 - не контролировать активность кампании
							    //в случае ошибок кампания приостанавливается автоматически (так как изменения делаются на действующей кампании)



					//ниже описаны 2 типа поведения страниц при отсутствии товара (исчезают или ставят метку "нет в наличии")

					//'removeNotFoundItem': 1, //0 - отключать ads-группы товаров, которых нет в фиде
								  //1 - удалять ads-группы товаров, которых нет в фиде
								  //параметр удаляет группы если страницы "исчезают" на сайте, не показываются при отсутствии товара


					'removeOutOfStockItem': [0, 'availability', ['out of stock', 'in stock']],
								//0 - отключать ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
								//1 - удалять ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
								//значения массива: флаг, название поля, пометка "нет в наличии" в фиде, пометка "в наличии" в фиде
								//нужно правильно задать генерируемое поле и все его значения, иначе выдаст ошибку
								//либо закомментировать, тогда не будет искать и останавливать/удалять группы по такому полю товара
								//параметр удаляет/приостанавливает группы если на страницах появляется пометка "нет в наличии" при отсутствии товара



					//дальше используется однотипный вариант значения параметра для формирования строки разбора/парсинга текстовых параметров РК поиска
					//['фиксированое значение до поля',['field_name1','field_name2',...],'фиксированое значение после поля']
					//как формируется значение текстового параметра РК:
						//при наличии значений массива производится их конкатенация через пробел слева направо
					//то есть:
						//фикс.знач.до. + ' ' + значение поля1 фида + (' ' + каждое след. поле фида) + ' ' + фикс.знач.после.
					//Обновление ads-группы товара выполняется после формирования записи товара в фиде,
						//когда все значения полей уже определены
					//могут использоватся значения любых полей фида (в т.ч. скрытых)


					'url': ['',['link']], //url, ссылка парсинга товара
								//хотя бы одно указанное поле должно быть обязательным в фиде



					'keys': ['',['title']],
						//поля, из которых формируются ключевые слова (обычно совпадает с параметром РК header)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//его формирование обычно происходит на основе того же поля, что в параметре(ах) header,
						//иначе, в фикс.значениях и значениях полей не стоит использовать разделители [.,|!()], только пробел,
						//а также нужно учитывать что первые два длинных слова будут по очереди стартовыми в каждом КС
						//то есть, если мы укажем, например, ['коляска прогулочная',['field_name'],'новая']
							//то во всех товарах получим все КС (за исключение цифровых) /+коляска .../ и /+прогулочная .../



					//'fixedkeys': ['kia киа хендай',[],''], //обязательные слова в КС (через пробел и/или запятую)
										//всегда добавляются во все КС (по одному значению)



					'header': ['',['title']],
						//поля, из которых формируются заголовки и пути для объявлений ads-группы товара (обычно это название товара)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//размещается в 2-х заголовках (3-й не используется в объявлениях)
					     	//используется, если закомментирован аналогичный параметр в объявлениях



					'price': ['',['GASprice']],
						//параметр цены в заголовках и описании
						//должно быть очищено от лишнего (только цена (цифры,запятые,точки), валюта и возможен в конце разделитель[.,|!], можно все без пробелов)
						//Размещается во 2-м заголовке. Перед ценой помещается разделитель " | " (если уже заполнено начало 2-го заголовка) и убирается после цены существующий разделитель [,|!]
						//Размещается в описании. После цены в описании помещается разделитель [,] если нет одного из [.,|!]
						//Если не помещается во 2-м поле заголовка, обрезается полностью в заголовке
						//Если не помещается в полях описания, обрезается полностью в описании вместе с beforeprice
					     	//используется, если закомментирован аналогичный параметр в объявлениях



					//Последовательность размещения параметров РК в заголовках объявлений:
					//header, price (price может отсутствовать в заголовках - зависит от priceaddtype)

					//Последовательность размещения параметров в полях описания объявления:
					//startdescription, beforeprice, price, afterprice, description, afterdescription
					//Контролируется наличие одного восклицательного знака во всем описании (останется первый с левой стороны)



					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id0":{


						'priceaddtype': 1, //куда в объявлении вставить цену
							//0 - пытаемся добавить цену в заголовки и описание
							//1 - пытаемся добавить цену в заголовки, если не получилось, то добавляем в описание (не добавляем beforeprice, если не добавляем цену в описание)
							//2 - пытаемся добавить цену в только в заголовки (не добавляем beforeprice)
							//3 - пытаемся добавить цену в только в описание


						//'startdescription': ['','',''],
							//параметр в самом начале описания, перед другими параметрами, перед beforeprice и др.
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'beforeprice': ['В наличии по цене'],
							//параметр перед ценой в описании
							//не добавляется в описание, если пустое значение цены
							//В конце автоматически не добавляется знак . что бы можно было вставить типа "По цене от" или "В наличии за"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания



						'afterprice': ['Лучшая цена, удобная доставка!'],
							//параметр после цены в описании (акция)
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//например, "Лучшая цена, удобная доставка!"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'description': ['',['description']],
							//параметр после цены и акции в описании (само описание)
							//В конце автоматически добавляется знак . (если дальше есть завершающий параметр описания и если в конце описания нет одного из [.,|!])
							//Если значение имен полей равно null, то автоматически берется текст из заголовков
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'afterdescription': ['Звоните сейчас!'],
							//параметр после самого описания в описании (завершающий текст описания)
							//Если не помещается в полях описания, обрезается полностью в описании
							//например, "Звоните сейчас!"



						//'header': ['',['title']],
							//поля, из которых формируются заголовки и пути объявлений ads-группы товара (обычно это название товара)
							//если закомментирован, то совпадают с аналогичным параметром РК


						//'price': ['',['GASprice']],
							//параметр цены в заголовках и описании
							//если закомментирован, то совпадают с аналогичным параметром РК




					},
					//настройки одного объявления (конец блока)





			},
			//конец настроек поисковой кампании





			"id0":{
				"field_name": 'id',
				//"field_value_selector": 'Id',
				"field_type": 'id',
				//"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 50,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return selector; },
				//'keyword': 'KeyWord',
			},

			"id1":{
				"field_name": 'title',
				"field_value_selector": '.class > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 150,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id2":{
				"field_name": 'description',
				"field_value_selector": '.class2 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 5000,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id3":{
				"field_name": 'link',
				//"field_value_selector": '.class4 > tag:nth-child(1)',
				"field_type": 'url',
				//"parsing_type": '',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},


			"id4":{
				"field_name": 'image_link',
				"field_value_selector": '.class5 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'src',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},



			"id5":{
//сайт без тега отслеживания наличия товара (все товары якобы в наличии)
				"field_name": 'availability',
				"field_value_selector": 'in stock',
				"field_type": 'fixed',
				//"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ if (html == 'Нет в наличии') { return 'out of stock'; } else { return 'in stock'; } }, 
				//'keyword': 'KeyWord',
			},


/*

			"id5":{
//на сайте есть тег отслеживания наличия товара
//тогда откоректировать field_Fun, field_value_selector, field_type и parsing_type
				"field_name": 'availability',
				"field_value_selector": '.class6 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ if (html == 'Нет в наличии') { return 'out of stock'; } else { return 'in stock'; } }, 
				//'keyword': 'KeyWord',
			},
*/



			"id6":{
				"field_name": 'price',
				"field_value_selector": '.class7 > tag:nth-child(1)',
				"field_type": 'price',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' UAH'; }, 
				//'keyword': 'KeyWord',
			},


			"id61":{
//поле для передачи цены в рекламу, невидимое в фиде
				"field_name": 'GASprice',
				"field_value_selector": '.class7 > tag:nth-child(1)',
				"field_type": 'nativeprice',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' грн.'; }, 
				//'keyword': 'KeyWord',
			},


/*
//раскомментировать, если какое-либо из этих двух полей доступно на сайте (штрих-код или артикул)

			"id7":{
//штрих-код
				"field_name": 'gtin',
				"field_value_selector": '.class8 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 1,
				"field_length": 50,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},


			"id8":{	
//артикул
//это поле можно делать из Id, например 2412341234-10 2412341234-GS или просто равным Id (field_type": 3)
				"field_name": 'mpn',
				"field_value_selector": '.class9 > tag:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 1,
				"field_length": 70,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},


*/

/*

			"id9":{
//изначально это поле не добавляем, только если заблокируют
//читал, что могут наоборот с ним заблокировать
				"field_name": 'identifier_exists',
				"field_value_selector": 'no',
				"field_type": 'fixed',
				//"parsing_type": '',
				"field_required": 'gtin,mpn',
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; },
				//'keyword': 'KeyWord',
			},


*/



			"id10":{

				"field_name": 'product_type_1',
				"field_value_selector": '.class10 > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id11":{

				"field_name": 'product_type_2',
				"field_value_selector": '.class10 > a:nth-child(2)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},




			"id12":{

				"field_name": 'product_type',
				//"field_value_selector": '',
				"field_type": ['product_type_1,product_type_2',' > '],
				//"parsing_type": 'text',
				"field_required": 3,
				"field_visible": 1,
				"field_length": 750,
				//"field_replace": ['\\<[^\\<\\>]+\\>', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},



		},
		//настройки одного фида (конец блока)



		//'seed': 2166136261, //стартовое любое положительное целое число, используемое в генераторе Id для товаров (необязательно)
					//если настроен seed и сгенерированы Id, то не менять, иначе все Id товаров изменяться
					//генерация не используется, если Id ищется на страницах и нет поисковых РК
					//зачем менять - могут возникут совпадения (коллизии), тогда можно изменить, 
						//но во всех фидах поменяются Id и удаляться/пересоздадутся поисковые РК


		'valid_scheme': [	//если указано, то разрешаем только эти протоколы при сканировании страниц и редиректах
		//		'http',   //http только в случае, если нам зачем-то понадобился такой сайт
				'https',
				],


		//Общие ограничения сканирования (если задать некорректно, то можно не добраться до страниц для парсинга)
		//рекомендуется их включать, только если большой сайт, где каталог занимает небольшое число страниц
		//'skip_query': [ 	//не сканировать указанные pathname, путь без домена и без #
		//		'',
		//		'/print',
		//		],
		//'only_query': [ 	//сканировать только указанные pathname, путь без домена и без #
		//		'',
		//		'/print',
		//		],
		//можно задать сложный анализ ограничений через функцию (при ответе 1 - разрешить сканировать)
		//нужно учитывать, что pathname - путь без домена и без #, можно применять parse_url(pathname)
		'scanFun': function(pathname){ var parsed_url = parse_url(pathname); if (!parsed_url) return 0; pathname = parsed.protocol + parsed.hostname + parsed.port + parsed.pathname + parsed.search + parsed.hash; /*...*/ return 1},



		//'skip_errors': [      //эти ошибки считать нормальным ответом (если много страниц с таким ответом)
		//		404,
		//		],
		//'repeat_errors': [    //для этих ошибок повторно делать запрос согласно MAX_TRIES (если сайт перегружен например)
		//		503,
		//		0,  	//наверно это когда nginx временно блокирует ip (отказ в обслуживании)
		//		],
		//'REQUEST_DELAY': 300,	//если возникает ошибка 0 (отказ в обслуживании) и мало страниц обрабатывается, то поиграться с задержкой (хотя проше отказаться)
		//'IGNORE_EMPTY_CONTENT_TYPE': false, //если много страниц с ошибкой "пустой content-type"
		'MAX_CHECKED_URLS': 20, //максимальное кол-во ссылок для скана (в том числе редиректов), что бы отключить - закомментировать или 0





	},
	//настройки сканирования и парсинга одного сайта (конец блока)

]












