// Файл настроек генерации фида мерчанта клиента

//Фиды генерируются раз в сутки по времени AdWords-аккаунта клиента
//Загружать фиды в мерчант нужно не реже чем раз в 30 дней, иначе реклама остановится
//Названия фидов начинаются с названия аккаунта в payments (включая ADONLY) для всех сайтов файла

//Любое изменение конфига приводит к немедленному обнулению текущего скана и формированию нового (при следующем старте, через час или меньше)
//но только, если изменения делались в настройках работающих фидов и сайтов (то есть, кроме изменения, добавления, удаления тестовых фидов/сайтов)
//Тестовые фиды или сайты перезапускаются всегда при каждом старте и запускаются только в режиме просмотра

//Не влияют на перескан параметры сайта title description notScanUrlsOnItemPages Debug_On MAX_CHECKED_URLS

//В тестовом режиме поисковые кампании не обрабатываются

//Если изменение настроек тестового или рабочего фида или сайта привело к ошибке действующего конфига, то
//рабочие запуски полностью остановятся до возвращения старого или корректного обновления конфига
//Поэтому измененные конфиги нужно предварительно проверять на тестовом парсере или в режиме просмотра

//Для того, что бы изменения конфигурации вступили в силу только после полного окончания работы текущего скана,
//необходимо добавить новый конфиг в туже папку под названием merchantfeed_new.txt (если окажется нерабочим, то переименуется в merchantfeed_newbad.txt)


[
	//настройки сканирования и парсинга одного сайта (начало блока)
	//можно копировать, изменяя значение ключа Id, если ручная нумерация Id
	{

		//'Id': '', // уникальный идентификатор сайта (значением может быть только строка или пусто)
					//автоматически назначается hostname из SITE (если параметр закомментиван или пустой)
					//можно указать любую строку символов, но тогда должен быть уникальный (если сайтов несколько)
					//если указать целочисленную Id-строку, то спереди автоматически будут добавлены две буквы: id
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант)

		'title': '', // название проекта/сайта (размещается в фиде)
				//этот параметр не влияет на перескан сайта

		'description': '', // описание проекта/сайта (размещается в фиде)
				//этот параметр не влияет на перескан сайта

		'SITE': 'https://armoline.com.ua/', // стартовая страница сканирования для одного сайта
		'CHARSET': 'UTF-8', // если равен UTF-8 то пытаемся определять charset по заголовкам, иначе это жестко заданный чарсет


		'timeHours': 'test', //часы генерации фидов сайта (через запятую) по времени AdWords-аккаунта клиента
				//если закомментированы или пусто, то это 0 часов
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида
				//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра
				//Примечание по поводу добавления/удаления режима 'test':
				//если после запуска и перед/при завершении скрипта изменить "на лету" параметр на 'test' или наоборот,
				//то не запишуться фиды, которые должны были создаться до изменения параметра.
				//то есть, нужно дождаться полного завершения и сохранения фидов (если это важно),
				//прежде чем менять в timeHours режим, в котором сохраняются фиды (выполнение/просмотр)




		//'startDays': '', //дни месяца генерации фидов сайта (через запятую в строке)
				//может выполнять запуск генерации чаще чем указано, если это требуют отдельные фиды
				//если закомментировано или пусто, то генерация каждые сутки и при каждом запуске скрипта
			     	//используются в фидах, в которых закомментирован аналогичный параметр фида




		//'noDropShip': 1, //не добавлять в ссылку всех товаров сайта признак перехода по нашей рекламе (/?sodship=y)
				     //раскомментировать только! для сайтов конкурентов
				     //используется, если нет аналогичного параметра у фида
					
		//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
				     //добавлять в ссылку товаров фида utm-метку фида
				     //в конец utmDropShip добавляется значение параметра 'ext' фида
				     //используется, если нет аналогичного параметра у фида


		//'priorityLev': 1, //уровень приоритета выполнения сканирования, закомментировано - 0,
				      //самый высокий приоритет - 0, если число уровня увеличивается - то сам приоритет уменьшается
				      //если приоритет одинаковый, то сайты сканирутся в порядке следования в этом конфиге
				      //сначала выполняются сканы с максимальным одинаковым приоритетом, затем остальные
				      //пока все сканы не пройдут, новый цикл сканов не начнется
				      //сканы с более низким приоритетом могут не выполнятся и ждать, если час завершения высокоприоритетного скана совпадет с часом начала его выполнения
				      //и наоборот, высокоприоритетные сканы могут не стартовать и ждать, если сейчас выполняются сканы с более низким приоритетом




		//'seed': 2166136261, //стартовое любое положительное целое число, используемое в генераторе Id для товаров (необязательно)
					//если настроен seed и сгенерированы Id, то не менять, иначе все Id товаров изменяться
					//генерация не используется, если Id ищется на страницах и нет поисковых РК
					//зачем менять - могут возникут совпадения (коллизии), тогда можно изменить, 
						//но во всех фидах поменяются Id и удаляться/пересоздадутся поисковые РК

		
		//'startInitFun': function(){ }, //функция инициализации хеша глобальных переменных ScanCreateFeedsGlobalVars.init и др. перед каждым шагом сканом

		//'endInitFun': function(){ }, //функция инициализации сохранения переменных или данных после каждого шага скана


		'valid_scheme': [	//если указано, то разрешаем только эти протоколы при сканировании страниц и редиректах
		//		'http',   //http только в случае, если нам зачем-то понадобился такой сайт
				'https',
				],



		//Общие ограничения сканирования (если задать некорректно, то можно не добраться до страниц для парсинга)
		//'skip_query': [ 	//не сканировать указанные значения начала pathname, путь без домена и без #
		//		'',
		//		'/print',
		//		],
		'only_query': [ 	//сканировать только указанные значения начала pathname, путь без домена и без #
				'/q',
				'/p',
				],
		//можно задать сложный анализ ограничений через функцию (при ответе 1 - разрешить сканировать)
		//нужно учитывать, что pathname - путь без домена и без #, можно применять parse_url(pathname)
		//'scanFun': function(pathname){ var parsed_url = parse_url(pathname); if (!parsed_url) return 0; pathname = parsed_url.protocol + parsed_url.hostname + parsed_url.port + parsed_url.pathname + parsed_url.search + parsed_url.hash; /*...*/ return 1},

		'scanFun': function(pathname){ var parsed_url = parse_url(pathname); if (!parsed_url) return 0; if (parsed_url.search||parsed_url.hash) return 0; if ((/^\/p\d+.*\.html$/.test(parsed_url.pathname))||(/^\/product_list/.test(parsed_url.pathname))) { return 1 } else { return 0 } },


		//'scanSelectors': ['ul.b-product-gallery','div.b-catalog-panel__pagination'], //массив составных селекторов - в каких селекторах страницы искать ссылки для скана и парсинга
						  //ограничиваем области поиска ссылок на странице скана
						  //каждый селектор из массива аналогичен field_value_selector, но не имеет ограничения длины полученного html-кода
						  //Рекомендуется первыми вставлять селекторы с ссылками на товар, затем селекторы со ссылками на следующие каталожные страницы

		//'onlyORskipSeparators': [  //массив массивов сепараторов, ограничивающих области поиска ссылок на странице (или в scanSelectors) 
		//	[['class="items"'],['В наличии',/Есть в наличии/],['Нет в наличии',/Сообщить когда появится/]],
		//	[['class="items2"'],[],[]],
		//], 
						  //ограничивает только при наличии хотя бы одного обвязывающего элемента, заданного в onlyORskipSeparators
							//если иное поведение не указано в параметре noSeparatorsNotScanUrls
						  //ищем характерные элементы наличия товара в каталоге, что бы не переходить на ссылки отсутствующего товара
							//либо ищем характерные элементы отсутствия товара в каталоге, что бы не переходить на ссылку отсутсвующего товара
							//либо просто ищем характерные элементы обвязывания нужных ссылок каталога или товара, что бы не добавлять ненужные ссылки
						  //это не селекторы! а сепараторы для разбиения кода по split()
						  //первый сепаратор - начало и конец обвязывающего элемента блока товара (или блока нужных ссылок) на странице каталога (на странице, где парсим новые ссылки)
							//начало - обязательный элемент всегда (любые другие элементы, в т.ч. второго и третьего сепаратора, могут отсутствовать)
							//конец может отсутствовать (тогда конец блоков обвязки поиска ссылок не ищем и не обрезаем, ищем ссылки в блоках, разбитых по началу обвязки)
							//конец - это ближайщий элемент к началу
							//если указан конец и он отсутствует после начала, то выводится предупреждение при отладке
						  //второй - список возможных признаков наличия товара
						  //третий - список возможных признаков отсутствия товара
						  //второй и третий списки (наличия или отсутсвия товара) могут быть пустыми, но не отсутствовать
							//если оба списка пустые, то добавляем все ссылки из найденных (по первому сепаратору) блоков
						  //все сепараторы могут быть как строкой, так и регулярным выражением (но не могут быть пустыми строками)
						  //ищем все совпадающие значения сепаратора обвязки товаров и (если заданы, то) первые совпадающие значение сепараторов признаков наличия или отсутствия товара
						  //если после разбиения кода на блоки товара не найден признак наличия товара или найден признак отсутствия товара, то в этом блоке не ищем ссылки
						  //соответственно <a...> не может быть в первом сепараторе (в его составляющих), иначе не будет найдена ссылка!
						  //поиск производится по всей странице или в scanSelectors (если они заданы)
						  //если в каком-то элементе массива onlyORskipSeparators найдено начало/конец обвязыващего блока, то в остальных элементах массива onlyORskipSeparators первые сепараторы уже не ищем
						  //Добавляются все ссылки со страницы (или из областей scanSelectors), если не найдено ни одного начала/конца обвязыващего блока
							//например, если не найдены сепараторы обвязки списка товаров на странице, то это страница каталога без списка товаров, с которой нужно добавить все найденные ссылки в скан
									//а если найдены сепараторы обвязки списка товаров, то определяем по второму и третьему сепаратору, какие ссылки товаров добавлять
						  //Если не нужно добавлять ссылки со страниц или областей scanSelectors, в которых нет ни одного первого сепаратора, то указать параметр noSeparatorsNotScanUrls


		//'noSeparatorsNotScanUrls': 1, //не добавлять в скан urls со страниц или областей scanSelectors, где НЕ найден ни один сепаратор обвязывающих элементов массива onlyORskipSeparators (первый сепаратор, сепаратор начала/конца обвязки)
						//обычное поведение - добавлять, если не найдены сепараторы обвязки в onlyORskipSeparators
						//этот параметр может присутствовать только при наличии массива onlyORskipSeparators

		//'notScanUrlsOnAnyPages' : 1, //не добавлять в скан urls со страниц никогда (используем, если добавляем urls в обход средств сканера. Но добавлять нужно аккурано, так как ссылки не контролируются стандартными средствами сканера)
							//полностью аналогичен 0 в parseUrls в CSVSITE (но применяется всегда, не только для CSVSITE)


		'notScanUrlsOnItemPages': 1, //не добавлять в скан urls со страниц, где найден товар хотя бы для одного фида 
					     //либо если хотя бы один фид пропускает на парсинг текущий url, как url товара (при наличии skip_parse only_parse или parseUrlFun у фида)
					     //не сканируем страницу товара на ссылки, кроме одного случая - когда страница товара первая, то есть указана в параметре SITE
					     //зачем - что бы страницы ссылок похожих на url товара или на которых уже обнаружен товар, не сканировать на добавление новых ссылок для скана
						//этот параметр не влияет на перескан сайта
						//этот параметр не имеет значения:
						//если задано 0 в parseUrls в CSVSITE (не парсить вообще никакие страницы для поиска ссылок) или задано 1 в notScanUrlsOnAnyPages
						//этот параметр обрабатывается:
						//если задано 1 в parseUrls в CSVSITE или отсутсвует CSVSITE и notScanUrlsOnAnyPages

		'firstNewPages': 1, //добавлять блоки новых ссылок с новых страниц в начало стека базы еще непроверенных ссылок скана
					//0 или закомментирован - обычный алгоритм добавления ссылок, в конец стека
					//1 - добавления новых ссылок в начало стека
					//то есть следующая для проверки ссылка будет точно из последней просканированной страницы, а не в порядке поступления блоков ссылок со страниц в базу
					//зачем - что бы быстрее находить товары, а не строить сначала карту сайта на специфических сайтах
					//это важный универсальный параметр, позволящий сразу получать страницы товара, а не ждать построения всей карты сайта
					//особенно на сайтах типа vinkod, где нет страниц каталога типа 1 2 ... 10, а есть одностраничные разделы с переходом к подразделу, с большой вложенностью подразделов
					//внутри страниц ссылки добавляются в обычном порядке без реверса (если не указан reverseNewUrls), а найденные новые страницы (точнее ссылки на них) добавляются перед предыдущими (которые тоже еще не сканировались)
					//для универсальной работы этого параметра на любых сайтах, особенно со структурой страниц каталога типа 1 2 ... 10,
					//рекомендуется настроить параметры notScanUrlsOnItemPages scanSelectors, что бы на страницах, где есть ссылки на товар, в первую очередь обрабатывались ссылки на товар, а потом каталожные
					//иначе может привести к тому, что наоборот на сайтах со структурой 1 2 ... 10 сначала построит карту, потом будет с конца добавлять товары


		//'reverseNewUrls': 1, //добавлять новые ссылки с новых страниц в обратном порядке
					//0 или закомментирован - обычный алгоритм добавления ссылок со страницы, в прямом порядке
					//1 - если нужно, что бы ссылки со страниц добавлялись в стек в реверсном порядке
					//например, если на каталожных страницах новые каталожные ссылки расположены вверху, а внизу ссылки на товар,
					//то при firstNewPages будут сначала сканироваться ссылки на товар, потом переходить к каталожным ссылкам



		'repeat_errors': [    //для этих ошибок повторно делать запрос согласно MAX_TRIES (если сайт перегружен например)
				504,	//Gateway Timeout
				503,	//Service Unavailable
				500,	//Internal Server Error
				0,  	//наверно это когда nginx временно блокирует ip (отказ в обслуживании)
				],
		//'MAX_TRIES': 10,	//число попыток запроса страницы (по умолчанию 5)
		//'skip_errors': [      //эти ошибки считать нормальным ответом (если много страниц с таким ответом)
		//		404,
		//		],
		//'REQUEST_DELAY': 300,	//задержка при ошибках из repeat_errors, если возникает ошибка 0 (отказ в обслуживании) и мало страниц обрабатывается, то поиграться с задержкой (хотя проще отказаться)
		//'IGNORE_EMPTY_CONTENT_TYPE': true, //если много страниц с ошибкой "пустой content-type"
		//'MAX_CHECKED_URLS': 20, //максимальное кол-во ссылок для скана (в том числе редиректов), что бы отключить - закомментировать или 0
					//этот параметр не влияет на перескан сайта
					//в тестах его можно использовать для завершения текущего скана и создания уже отсканированных фидов, если долго выполняется и нужно посмотреть результат
					//так нельзя завершать в действующих проектах, иначе часть товара в фидах и РК остановяться

		//'repeaterUrl': 'http://robosoft.sale-storm.com/', //ссылка на директорию со скриптом-ретранслятором 
				     //для сайтов, которые блокируют поисковые запросы (убираем user-agent робота, но IP должен остаться гугла)


		//'pausedFeeds': '', //идентификаторы настроенных фидов, обновление которых приостановлено, через запятую
				     //используется, если созданы файлы фида и/или РК и нам не нужно дальше их обновлять
				     //файлы и РК не удаляются и не обновляются в приостановленных фидах
				     //родительские фиды, у которых активны дочерние фиды не могут быть остановлены
				     //можно остановить/зарезервировать все фиды скана сайта

		//'Debug_On': 1, //включить отладочную информацию в режиме исполнения (в режиме просмотра она включена всегда)
				//0 или закомментирован - отключен в режиме исполнения
				//1 - стандартный уровень
				//2 - более подробно (с кодами успешных ответов сайта и длиной страниц) во всех режимах работы скрипта
				//3 - расширенный уровень отладки (с кодами успешных ответов сайта и содержимым страниц) во всех режимах работы скрипта
				//этот параметр не влияет на перескан сайта
				//то есть его можно включить на любом шаге выполнения скана


		//настройки одного фида (начало блока)
		//можно копировать, изменяя значение ключа (id0) в хеше фида и значение параметра в его хеше 'ext'
		"id0":{
			//'ext': '', // уникальное расширение файла фида в пределах одного сайта (если фидов несколько в сайте)
					//автоматически назначается значение ключа хеша этого фида
					//можно указать что-то другое, но тогда должен быть уникальный (если фидов несколько в сайте)
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант и utm-метка фида utmDropShip)



			//'parentFeed': '', //идентификатор (ключ) родительского фида этого скана, из которого можно брать поля типа parentFeed
					    //поля родительского фида указываются в field_value_selector, а тип поля в field_type
					    //если есть этот параметр, то timeHours и startDays берутся у родительского фида и здесь игнорируются
					    //родительский фид - это любой предыдущий фид того же сайта/скана, расположенный до дочернего
					    //дочерний фид запускается всегда одновременно с родительским


			//'childAddByRank': 1, //добавлять страницу в фид, если не один из старших (предыдущих) детей
							//(у которых есть childAddByRank) или родитель не добавили эту страницу
						//параметр только для дочерних фидов (можно использовать только, если указан parentFeed)
						//гарантирует непересечение между родителем и всеми детьми с параметром childAddByRank
						//например, если нужно первые 200 страниц добавить в первый фид, а остальные во второй и т.д.
						//если однотипные товары нужно добавить в разные кампании, 
							//что бы проверить эффективность разных стратегий РК
						//либо при почти разных настройках конфига быть уверенным, что они точно не пересекутся
						//если одинаковые конфиги у фидов - обязательно указывать MAX_ADD_URLS
							//иначе дети никогда не получат записи!

						//страница может быть добавлена, если предыдущие дочерние (с childAddByRank) и родительский фиды ее не добавили
						//то есть, гарантируется, что эту страницу никто из старших, участвущих в "игре", не добавлял
						//другие дети, более младшие (следующие в конфиге) и более старшие,
							//могут добавлять всегда, если у них нет параметра childAddByRank
						//то есть, дети у которых нет childAddByRank - не участвуют в "игре", работают как обычно
						//родитель пишет всегда (если он сам не child с параметром childAddByRank), 
							//а в игре участвуют дети у которых есть параметр childAddByRank
						//поэтому важно понимать, когда указывать MAX_ADD_URLS (при одинаковых конфигах), а когда не указывать (при разных конфигах, на разные группы товара и пр.)
						//если родитель A сам является участником игры другого родителя B, то если запись сделал старший родитель (B)
							//или его старшие дети по отношению к A, то не только родитель A, но и его дети не смогут писать.
							//то есть в игре участвует вся цепочка родительских подчинений


			//'timeHours': '', //часы генерации фида сайта (через запятую) по времени AdWords-аккаунта клиента
					//если закомментированы, то совпадают с часами генерации сайта
					//если пусто, то это 0 часов
					//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра
					//Примечание по поводу добавления/удаления режима 'test':
					//если после запуска и перед/при завершении скрипта изменить "на лету" параметр на 'test' или наоборот,
					//то не запишуться фиды, которые должны были создаться до изменения параметра.
					//то есть, нужно дождаться полного завершения и сохранения фидов (если это важно),
					//прежде чем менять в timeHours режим, в котором сохраняются фиды (выполнение/просмотр)



			//'startDays': '', //дни месяца генерации фида (через запятую в строке)
					//если закомментированы, то совпадают с днями генерации (startDays) сайта
					//если пусто, то генерируем фид каждые сутки и при каждом запуске скрипта



			'file_type': ['.html','.ga.xml','.ga.tsv'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.tsv'])
					     	//параметр используется, если закомментирован аналогичный параметр поля
						//в настоящий момент поддерживаются ['.html','.ga.xml','.ga.txt','.ga.tsv']

			'htmlencode': 1, // восстанавливать html-сущности и не вставлять CDATA в значение поля (для csv всегда 0 и CDATA не вставляется)
					//html-сущности удаляются при парсинге страниц товара
					//и восстанавливаются перед записью в файл, если htmlencode 1, иначе вставляется CDATA.
					//CDATA вставляется только если есть html-сущности в значении поля.
				     	//параметр используется, если закомментирован аналогичный параметр поля фида



			//'noDropShip': 1, //не добавлять в ссылку всех товаров фида сайта признак перехода по нашей рекламе (/?sodship=y)
						//можно раскомментировать только! для сайтов конкурентов
						//если закомментирован, то совпадает с noDropShip сайта



			//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
					     //добавлять в ссылку товаров фида utm-метку фида
					     //в конец utmDropShip добавляется значение параметра 'ext' фида
					     //если закомментирован, то совпадает с utmDropShip сайта



			//'ftp': { login: 'login', password: 'password', host: 'host.com', directory: '/', passive_mode: 1, ssl_mode: 0, files_types: ['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.tsv'], createzip: 1, zipfilename: ''},
				 //параметры передачи заархивированных фидов по фтп (например, для отслеживания цен конкурентов)
				       //после создания фида передавать его по фтп
				 //passive_mode рекомендуется всегда включать
				 //createzip передавать архивом - 1, или неархивированные файлы - 0
				 //название zip используется IdName.Id.feed.[feedId|ext].zip (как в названии файла фида)
					//либо если есть непустое уникальное zipfilename (среди любых фидов аккаунта)
				 //files_types - фиды с какими расширениями передавать, используем один или несколько типов ['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.tsv']



			//ОТЛИЧИТЕЛЬНЫЕ ПРИЗНАКИ СТРАНИЦ С ТОВАРАМИ (если есть notScanUrlsOnItemPages, то включать только УНИКАЛЬНЫЕ признаки страниц карточки товара!)
			//'skip_parse': [ 	//не парсить указанные значения начала pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],
			//'only_parse': [ 	//парсить только указанные значения начала pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],
			//'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; url = parsed_url.protocol + parsed_url.hostname + parsed_url.port + parsed_url.pathname + parsed_url.search + parsed_url.hash; /*...*/ return 1},
					//можно задать сложный анализ ограничений парсинга фида через функцию (при ответе 1 - разрешить парсить)
					//например, что бы сохранять по шаблону только нужные ссылки парсинга товара
					//нужно учитывать, что url включает протокол и домен, можно применять parse_url(url)
					//вызывается до парсинга страницы по полям фида (одновременно с skip_parse и only_parse)


			'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; if (parsed_url.search||parsed_url.hash) return 0; if (/^\/p\d+.*\.html$/.test(parsed_url.pathname)) { return 1 } else { return 0 } },


			//'checkFieldsFun': function(fields,url,feedId){ if (fields && (fields['product_type'] == '/*...*/' ))  return 1},
					//перед записью готовой карточки товара можно сделать анализ всех полей (при ответе 1 - разрешить запись)
					//например, что бы записывать только определенные категории товаров
					//вызывается после парсинга страницы по полям фида, если все поля удовлетворяют условиям


			//'SKIP_FIRST_URLS': 20, //сколько первых товарных позиций пропустить, прежде чем начать добавлять товары в фид и РК
					         //считаются первые ссылки, которые прошли все условия (в т.ч. checkFieldsFun), являются товарными и готовы к записи
						 //например, нам нужно сейчас только 10 000, пропустить пока еще 10 000, и записать в другой фид по тем же настройкам еще 10 000


			//'MAX_ADD_URLS': 20, //максимальное кол-во ссылок для добавления в фид при парсинге товарных страниц, что бы отключить - закомментировать или 0
					      //если подключена поисковая РК, то отслеживается добавление активных групп объявлений, а не добавление в фид






			"id0":{
//поле со скидкой должно отсутствовать, в этом магазине товар на распродаже не рекламируем
				"field_name": 'OLDprice',
				"field_value_selector": '.b-product-cost__old-price',
				"field_type": 'html',
				"parsing_type": 'nativeprice',
				"field_required": -1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' грн.'; }, 
				//'keyword': 'KeyWord',
			},





			"id1":{
//поле для передачи цены в рекламу, невидимое в фиде
//одновременно, это поле сохраняет нативный прайс для модификации валюты цены в фиде
				"field_name": 'GASprice',
				"field_value_selector": '.b-product-cost__price',
				"field_type": 'html',
				"parsing_type": 'nativeprice',
				"field_required": 1,
				"field_visible": 0,
				//"field_length": 0,
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' грн.'; }, 
				//'keyword': 'KeyWord',
			},




			"id101":{
				"field_name": 'price',
				"field_type": ['GASprice',''],
				"parsing_type": 'iso4217price',
				"field_required": 4,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['^\\<[^\\>\\<]*\\>([^\\>\\<]*)(?:(?:\\<[^\\>\\<]*\\>[^\\>\\<]*\\<[^\\>\\<]*\\>)|\s+)([^\\>\\<]*).*$', '$1 $2'],
				//"field_replace": ['^.*?((?:(?:[\\d])|(?:[\\.\\,]\\d))[\\d\\.\\,\\s]*).*$', '$1'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html.replace(/\s+/g, '') + ' UAH'; }, 
				//'keyword': 'KeyWord',
			},





			"id2":{
				"field_name": 'title',
				"field_value_selector": '.cs-product__name span[data-qaid="product_name"]',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_length": 150,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},



			"id3":{
				//делаем поле необязательным. Если его не нашли, то заменяем на поле id22
				//при тестах на его наличие - восстановить обязательность этого поля и убрать поле id22
				"field_name": 'description',
				"field_value_selector": '.b-user-content[data-qaid="product_description"]',
				"field_type": 'html',
				"parsing_type": 'text',
				//"field_required": 1,
				"field_required": 0,
				"field_visible": 1,
				"field_length": 5000,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'Keyword',
			},



			"id301":{
				//если поле description отсутствует, заменяем его на title
				"field_name": 'description',
				//"field_value_selector": '.b-user-content > div, .b-user-content p:nth-child(1), .b-user-content',
				"field_type": ['title',''],
				//"parsing_type": 'text',
				//"field_required": 1,
				"field_required": 'description',
				"field_visible": 1,
				"field_length": 5000,
				//"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'Keyword',
			},


			"id4":{
				"field_name": 'link',
				//"field_value_selector": '.class4 > tag:nth-child(1)',
				"field_type": 'url',
				//"parsing_type": '',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},





			"id5":{
				"field_name": 'image_link',
				"field_type": ['link',''],
				"field_required": 4,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ if (/^\//i.test(html)) { html = ScanCreateFeedsGlobalVars.SITE_SCHEME + "://" + ScanCreateFeedsGlobalVars.SITE_HOST + html }  return html; }, 
				"field_Fun": function(html, selector, url, field_name, fields){ var parsed_url = parse_url(url); if (!parsed_url) return ''; if ((!parsed_url.pathname)||(!/(.*\.)html?$/im.test(parsed_url.pathname))) return ''; return "http://armoline.zzz.com.ua" + parsed_url.pathname.replace(/(.*\.)html?$/im, "$1") + 'jpg'; }, 
				//'keyword': 'KeyWord',
				'htmlencode': 1,
			},




			"id6":{
				"field_name": 'id',
				//"field_value_selector": 'Id',
				"field_type": 'id',
				//"parsing_type": 'text',
				"field_required": 4,
				"field_visible": 1,
				"field_length": 50,
				//"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return selector; },
				//'keyword': 'KeyWord',
			},




			"id7":{
//на сайте есть тег отслеживания наличия товара
				"field_name": 'availability',
				"field_value_selector": '.b-product-data__item',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				//"field_length": 0,
				//"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				"field_Fun": function(html, selector, url, field_name, fields){ if (html == 'В наличии') { return 'in stock'; } else { return ''; } }, 
				//'keyword': 'KeyWord',
			},








			"id1101":{

				"field_name": 'product_type_1',
				"field_value_selector": 'li.b-path__item:nth-child(3) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 4,
				"field_visible": 0,
				//"field_length": 0,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id1102":{

				"field_name": 'product_type_2',
				"field_value_selector": 'li.b-path__item:nth-child(4) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},


			"id1103":{

				"field_name": 'product_type_3',
				"field_value_selector": 'li.b-path__item:nth-child(5) > a:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 0,
				"field_visible": 0,
				//"field_length": 0,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'KeyWord',
			},



			"id11":{

				"field_name": 'product_type',
				//"field_value_selector": '',
				"field_type": ['product_type_1,product_type_2,product_type_3',' > '],
				//"parsing_type": 'text',
				"field_required": 4,
				"field_visible": 1,
				"field_length": 750,
				"multifield_name": 'product_type',
				//"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				//'keyword': 'KeyWord',
			},



			"GASearch": { //параметры поисковой РК аккаунта AdWords, где рекламируются товары фида

					//формируются на основе значений полей фида

					//РК может быть совмещенной (поиск+КМС)
					//генерируются объявления и слова и отслеживается наличие товаров, изменения объявлений и базовых ключевых слов
					//на основе уникальных url товара и названия (останавливаем/включаем/удаляем/изменяем группу товара)
					//Не более 20 000 групп объявлений в кампании, поэтому в одном фиде может быть несколько РК, где много товаров распределяются автоматически


					'Id': '', //уникальный элемент названия поисковых кампаний фида аккаунта AdWords, где рекламируются товары фида
						    //Id не должен повторяться в названиях других кампаний, иначе ошибка
						    //Если Id равен '', то название равно Id.feed.[feedId|ext].i где i - порядковый номер кампании фида, начиная с 0
						    //Кампания с номером 0 является основной, из нее автоматически копируются настройки для остальных
						    //Кампания 0 создается автоматически и останавливается, после чего надо настроить параметры кампании 0 и запустить ее
						    //Остальные кампаниия получают настройки и статус кампании 0, то есть после ее запуска запускаются остальные и аналогично остановка
						    //Если Id закомментирован, то отключено управление и обновление РК
						    //когда заканчиваются группы во все существующих РК, автоматически создается новая РК и получает все настройки кампании 0
						    //если группа удаляется, то заново она может появится совсем в другой РК
						    //в Id могут присутствовать пробелы и неанглийские буквы, всего не более 100 символов
						    //если основная кампания 0 активна, то автоматически в неактивные копируются ее настройки и они получают статус активных
						    //то есть, если нужно поменять настройки, то меняем в основной и останавливаем все остальные, после чего они получат копию настроек
						    //если нужно остановить все кампании, то можно остановить только основную кампанию, остальные остановяться автоматом
						    //нельзя останавливать другие кампании без нужды, если активна базовая - они восстановяться все равно и обнулится статистика, так как будут снесены их настройки
						    //РК не изменятся!, если GAShtml = 1


					'GAShtml': 2, //добавление специальго типа расширения файлов .gas.html в фид
							//для демонстрации внешнего вида объявлений на основании параметров GASearch
							// 0 или закомментировано - не добавлять в фид, управление РК включено
							// 1 - добавлять в фид без изменения поисковых РК
							// 2 - добавлять в фид, управление РК включено
							//если не сгенерировались объявления, то запись не создается
							//параметр используется если раскомментировано поле Id
							//внимание! параметр может не обновлять РК (если равен 1)


					'GAShtmlAd': 'Реклама', //название метки "Реклама" в объявлениях .gas.html
								//Если закомментировано, то будет вставлено слово 'Ad'

					'GAShtmlComment': 'Примеры ключевых слов. Будут отфильтрованы при добавлении в кампанию',
								//комментарий перед списком КС после объявлений в .gas.html
								//Если закомментировано, то будет вставлено 'Examples of keywords. Will be filtered when added to a campaign'
								//Другие варианты:
								//Примеры ключевых слов. Будут откорректированы после анализа 
								//Examples of keywords. Will be corrected after analysis
								//Примеры ключевых слов. Будут откорректированы после подписания контракта
								//Examples of keywords. Will be corrected after signing the contract
								//Примеры ключевых слов. Будут повторно проанализированы при добавлении в кампанию.
								//Examples of keywords. Will be re-analyzed when added to a campaign.





					'GAShtmlExt': 'Фабрика "АРМОЛАЙН". Официальный производитель. Эксклюзивные Модели. Только Прочные Материалы. Высокое Качество Пошива. Опт и Розница. Доставка в День Заказа.',
								//демо-расширения уровня рекламной кампании (нужно потом добавить вручную эти расширения в РК)
								//необязательный параметр, система не контролирует длину его элементов (например, ограничение длины - 25 символов на одно уточнение
										//или структурированное описание (длина описания не включает слова типа 'Бренды: ' 'Модели: ' 'Услуги: ' и ', ' между описаниями))
								//демо-расширения предназначены только для визуального контроля клиентом в фиде РК.
								//значение добавляется "как есть" в файл .gas.html, сразу после описания каждого объявления (сначала вставляется ". " если нет завершающего знака в описании)



					'Budget': 100, //Бюджет РК, используется только на этапе создания РК


					'keyword': 'KeyWord', //регистр слов в объявлениях, допустимы KeyWord, Keyword, KEYWORD и keyword. Как вставлять текст если поле текстовое (KeyWord - заглавные буквы в каждом слове и Keyword - заглавные буквы в начале предложения)
								//но лучше готовить изначально в полях все корректно (тогда можно, например, использовать в отдельных словах все большие буквы и пр.)
								//если закомментировано, то не используется (берется полученное значение как есть)
							     	//используется, если закомментирован аналогичный параметр в объявлениях


					'priceRound': 100, //Начиная с какой цены отбрасывать дробную часть цены
							  //если закомментировано, то не отбрасывать


					'startbid': 5, //стартовое значение ставки в кампании или группе
							//устанавливается при создании кампании (тег MCLSET1:2:basebid) или ставка группы при ее создании
							//Если не установлен в оптимизаторе NOBIDM:
								//после создания кампании можно изменять только сам тег MCLSET1:2:... в аккаунте (ставка группы меняется автоматически в оптимизаторе)
								//для группы берется значение из MCLSET1:2:basebid кампании, если не находит в названии число, то берет отсюда
							//Если установлен NOBIDM в оптимизаторе, то ставку при создании группы берет всегда отсюда


					'keywordtypes': 5, //типы соответствия добавляемых КС при создании групп
								//0 - точное и широкое с модификаторами соответствия
								//1 - точное соответствие
								//2 - широкое с модификаторами соответствие
								//3 - точное и фразовое соответствия
								//4 - фразовое соответствие
								//5 - точное и широкое с модификаторами соответствия (для цифро-буквенных КС - точное и фразовое соответствия)
								//6 - широкое с модификаторами соответствия (для цифро-буквенных КС - фразовое соответствие)
							//не создаются КС перекрестно, только в последовательности указанной в keys и/или в masskeys и затем дополнительно в fixedkeys
							//действует только при создании групп, при модификации - нет, так как иначе будет конфликтовать с оптимизатором (который может добавлять совсем по другому)
							//поэтому стоит менять между собой только режимы 5,6 или 0,1,2,3,4 (либо вручную дорабатывать как нужно, или заново создавать кампании)
							//а лучше вообще не менять (а управлять из оптимизатора), либо заново создавать кампании
							//например, режим 5 создаст фразовое соответствие для ЦБКС, но оптимизатор потом добавит длинный хвост с широким соотвествием и добавит ЦКБС с пробелами (считая их несколькими словами) в широком соответствии
								//либо, режим 2, 6 создаст широкое соответствие для не ЦБКС, но оптимизатор потом добавит эти слова с точным соотвествием и т.п.
							//с точки зрения оптимизатора все режимы, как правило почти эквивалентны (если не используются спец.настройки оптимизатора)
							//в общем случае - всегда использовать универсальный режим 5 (либо вручную удалять и заново создавать кампании, если нам нужны спец.режимы оптимизатора и keywordtypes)
							//рабочий режим - 5


					'addkeystype': 0, //тип добавления КС (используется при создании и модификации групп)
								//0 - цифровые КС, КС из 3-х слов и в случае, если все КС из 3-х слов имеют статус "мало запросов", дополнительно добавлять КС из 2-х слов  (здесь больше слов добавится чем в 1)
								//1 - цифровые КС, КС из 3-х слов и в случае, если все добавленные слова имеют статус "мало запросов", дополнительно добавлять КС из 2-х слов (здесь меньше слов добавится чем в 0, не добавятся КС из 2-х слов, если у ЦС достаточно показов)
								//2 - КС из 3-х слов и в случае, если все слова имеют статус "мало запросов", дополнительно добавлять КС из 2-х слов
								//3 - только цифровые КС и КС из 3-х слов
								//4 - только цифровые КС
								//5 - только КС из 3-х слов
								//6 - цифровые КС, КС из 3-х слов и КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)
								//7 - только КС из 3-х слов и КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)
								//8 - только КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)

								//стандартно в addkeystype используется 3 и 2 слова в КС,
									//если нужно изменить на другое кол-во слов в КС, то использовать maxNodigaddkeyNum
								//при модификации остановка/удаление КС или удаление/создание групп выполняется согласно modifykeystype

					'maxNodigaddkeyNum': 3, //большее из чисел в addkeystype кол-ва слов в КС (для не ЦКС) (допускается от 3 и больше)
								//сколько будет добавлено слов в КС вместо 3-х и 2-х в addkeystype (по умолчанию 3, то есть 3 и 2)
								//например, если 4, то вместо 3-х и 2-х используется соответственно 4 и 3 в addkeystype
									// если 5, то вместо 3-х и 2-х используется соответственно 5 и 4 в addkeystype
									//и т.д.
								//используется если слишком много КС при малом бюджете и надо уменьшить кол-во активных, а потом после проведения оптимизации можно увеличивать кол-во КС, уменьшая maxNodigaddkeyNum и соотвественно уменьшиться длина КС, при этом остануться активные "длинные хвосты"


					'modifykeystype': 3, //режим модификации КС (используется при модификации групп)
								//0 - стандартный режим (полное удаление/создание новых групп при любых изменениях генерируемых КС)
								//1 - останавливать и добавлять КС без удаления групп
								//2 - дубликат режима 1 (останавливать и добавлять КС без удаления групп)
								//3 - удалять и добавлять КС без удаления групп

								//при работе с оптимизатором читается параметр sskeywrd1 из КС, его содержимое - это КС-источник, который сгенерировал это КС в оптимизаторе
								//существующие в группе КС считаются "рабочими", то есть их нельзя удалять или останавливать, если они включают в себя все слова из любого сгенерированного КС

								//минусы каждого из режимов
								//режим 0 всегда удаляет и создает заново группу, если изменились генерируемые КС (то есть нуча мусорных меток и оптимиазация каждый раз заново)
								//при режиме 1/2 теоретически оптимизатор (а не мерчант-сканер) может восстановить остановленные КС, которых больше нет и не будет на странице (со временем эти слова могут быть остановлены оптимизатором)
									//то есть надо следить за ручными командами восстановления оптимизатором видимости КС и переключать 1/2
									//но если останется какое-то КС в группе, которое никогда больше не будет отвечать содержанию объявления, то это будет проблема, так как это КС будет тяжело выявить оптимизатору (так как оно явно из родственной тематики и будет давать заинтересованность потребителя, но не заказы, то есть сливать бюджет)
									//главный минус - надо восстанавливать активность всех генерируемых КС при любом изменении списка этих КС (всегда modifykeysEnable=1), то есть надежда только на оптимизатор, если постоянно КС уходят и появляются
										//то есть нам нужно восстанавливать много КС, многие из которых могут быть плохими
								//режим 3 может аннулировать статистику "плохих" слов, если они опять появятся на странице и будут созданы мерчант-сканером в группе повторно позже (они опять появяться в рекламе, сливая бюджет)
									//здесь все на автомате, плохое КС, которое повторно появится и будет добавлено в группе, через время будет остановлено, но за это время сольет часть бюджета
									//кроме того, будут полностью удалены все длинные хвосты этого слова, которые снижают его цену
									//но с другой стороны, если КС пропало на странице, то это либо плохая запчасть убранная с продажи, либо запчасть которая быстро продается
									//этот режим оптимален если не использовать оптимизатор с остановкой слов

								//зачем режим 1/2 - например, в автозапчастях может какой-то автомобиль (его запчасть то есть в продаже, то нет) регулярно добавляться/исчезать на странице (если несколько авто или несколько кодов запчастей на странице)
									//если мы будет удалять и создавать каждый раз заново его КС, то будет обнуляться статистика по такому КС (особенно важно если КС дает слив бюджета, то каждый раз оно будет как новое)
								//зачем продублирован режим 1/2 - после восстановления видимости слов в оптимизаторе могут восстановится слова, которые не должны быть активны
									//то есть если была команда восстановления КС оптимизатора VOIDRESTORE или ACCOUNT EFFECTIVITY ACTION = REMOVE, то потом нужно создать merchantfeed_new.txt и поменять в нем здесь 1 на 2 или наоборот
								//при наличии оптимизатора - можно использовать режим 1 (и менять на 2 как написано выше, если мы давали оптимизатору команду восстановить видимость каких-то КС)
											//но если не будем менять, то не очень страшно но при наличии оптимизатора
								//режим 3 лучше всего сейчас, так как при удалении/появлении новых КС в списке генерируемых не нужно восстанавливать активность всех генерируемых КС при любом изменении списка
									//а только появяться новые КС, которые (если они "плохие") точно оптимизатор быстро остановит
								//рабочий режим - 3
									


					'modifykeysEnable': 1, // восстановление активности всех сгенерированных КС после модификации группы
									//0 - активность генерируемых КС не контролируется
									//1 - восстановить активность всех сгенерированных КС только при любом изменении addkeystype или для modifykeystype=1/2 - при любом изменении списка генерируемых КС, после модификации группы
									//2 - всегда восстанавливать активность всех сгенерированных КС после модификации группы (при любой попытке модификации КС в любом режиме modifykeystype и addkeystype или maxNodigaddkeyNum)
									//при изменении addkeystype как правило, стоит восстановить активность всех сгенерированных КС,
										// например, у нас остались неактивные ЦС в режиме addkeystype=5, и если мы переключим addkeystype в режим 4 или 3, то ЦС остануться неактивными, что неправильно
									//для modifykeystype=1/2 при изменении списка генерируемых слов также нужно восстановить видимость всех генерируемых КС, иначе слово, которое появилось, но было раньше остановлено из-за отсутствия именно его товара на странице (если товаров/кодов на странице несколько), не станет активным!
										//тут иначе не получится, надежда на оптимизатор если КС "плохое", либо нужно отслеживать появление в списке генерируемых КС каждого слова
									//в режиме 2, если "плохие" КС были остановлены вручную или оптимизатором, то они станут активными после модификации группы
									//поэтому использовать режим 2 нежелательно
									//рабочий режим - 1


					//'keysmixtype': 0, //тип миксирования слов в нецифровых КС, формируемых из параметра keys (общая длина КС - на основе addkeystype и maxNodigaddkeyNum)
								//0 или закомментировано - микс каждого из первых двух слов с любыми остальными словами
								//1 - микс первого слова с любыми остальными словами
								//2 - берутся первые слова, в количестве - на основе addkeystype и maxNodigaddkeyNum
								//используется с параметром keys из основной РК


					//'masskeysmixtype': 0, //тип миксирования слов в нецифровых КС, формируемых из параметра masskeys (общая длина КС - на основе addkeystype и maxNodigaddkeyNum)
								//0 или закомментировано - микс каждого из первых двух слов с любыми остальными словами
								//1 - микс первого слова с любыми остальными словами
								//2 - берутся первые слова, в количестве - на основе addkeystype и maxNodigaddkeyNum
								//используется с параметром masskeys из основной РК

					//'removeLSVKeywords': 1, //1 - удалять при создании/модификации групп все новые КС со статусом "мало запросов" (могут быть удалены все слова в группе)
								//2 - приостанавливать при создании/модификации групп все новые КС со статусом "мало запросов" (могут быть остановлены все слова в группе)
								//0 или параметр закомментирован - ничего не делать при создании групп
							//в основном, это нужно для "красивого" начального создания кампаний/групп с точки зрения отчетов и визуально (что бы клиент не видел совсем бредовые словосочетания)


					//'requiredescr': 1,  // 1 - параметр description является обязательным в объявлениях
						//описание всегда обязательно в объявлениях, но оно формируется из нескольких параметров (startdescription, beforeprice, price, afterprice, description, afterdescription)
						//поэтому обычно параметр description необязателен, кроме случая когда есть requiredescr
					     	//используется, если закомментирован аналогичный параметр в объявлениях



					//'noPaths': 1,  // 1 - не добавлять пути к объявлениям
					     	//используется, если закомментирован аналогичный параметр в объявлениях


					'afterdescrNeed': 1, //обязательно вставлять afterdescription в конце описания
								//если есть afterdescription, то завершает конец description знаками [.!|] или | (если обрезано неоконченное предложение)
							     	//используется, если закомментирован аналогичный параметр в объявлениях


					'powerControl': 0,  // 0 - не контролировать активность кампании
							    // 1 - включать кампанию, если нет ошибок
							    // 2 - включать кампанию если нет ошибок, выключать если есть ошибки



					//ниже описаны 2 типа поведения страниц при отсутствии товара (исчезают или ставят метку "нет в наличии")

					//'removeNotFoundItem': 1, //0 либо закомментирован - отключать ads-группы товаров, которых нет в фиде
								  //1 - удалять ads-группы товаров, которых нет в фиде
								  //параметр удаляет группы если страницы "исчезают" на сайте, не показываются при отсутствии товара


					'removeOutOfStockItem': [0, 'availability', 'out of stock'],
								//0 - отключать ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
									//и учитывать такие группы в общем количестве активных (проверенных/модифицированных) групп
									//то есть, если страница товара есть, но товара нет в наличии, то добавить эту ссылку в список проверенных/модифицированных
									//если указан MAX_ADD_URLS и есть пометка "нет в наличии", то новые группы не добавяться (будут останавливаться и включаться те что есть)
									//параметр позволяет зафиксировать заданные товары, без добавления новых
								//1 - отключать ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
									//и НЕ учитывать такие группы в общем количестве активных (проверенных/модифицированных) групп
									//если указан MAX_ADD_URLS и на странице есть пометка "нет в наличии", то добавяться новые группы (неактивные будут останавливаться)
								//2 - удалять ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
									//естественно, такие группы не учитываются в общем количестве активных (проверенных/модифицированных) групп
								//значения массива: флаг, название поля, пометка "нет в наличии" в фиде
								//либо закомментировать, тогда не будет искать и останавливать/удалять группы по такому полю товара
								//параметр удаляет/приостанавливает группы если на страницах появляется пометка "нет в наличии" при отсутствии товара



					//дальше используется однотипный вариант значения параметра для формирования строки разбора/парсинга текстовых параметров РК поиска
					//['фиксированое значение до поля','field_name1,field_name2,...','фиксированое значение после поля']
					//как формируется значение текстового параметра РК:
						//при наличии значений массива производится их конкатенация через пробел слева направо
					//то есть:
						//фикс.знач.до. + ' ' + значение поля1 фида + (' ' + каждое след. поле фида) + ' ' + фикс.знач.после.
					//Обновление ads-группы товара выполняется после формирования записи товара в фиде,
						//когда все значения полей уже определены

					//другой вариант использования - функция с переданными значениями полей
					//function(fields){ return fields['link'].field_value },

					//исключение для параметра keys: может использоваться массив однотипных вариантов значений
					//то есть все элементы массива могут быть массивами однотипных вариантов или функциями


					//могут использоватся значения любых полей фида (в т.ч. скрытых, повторяющихся и пр.),
					//кроме полей в виде вложенных аттрибутов (типа shipping и tax)
					


					//поддержифаются модификаторы объявлений, но обязательно размещать с доп. инфокавычками справа
					//{модификатор объявления}[max длина значения модификатора]
					//кавычки удаляются в готовых объявлениях
					//модификаторы можно использовать в параметрах:
					//header header2 startdescription beforeprice afterprice description afterdescription
					//в afterdescription можно вставить модификатор только как его полное значение, а не часть значения



					//три обязательных параметра - url keys header (и также еще description, если указан requiredescr)
									//допускается отсутствие keys при наличии masskeys



					'url': ['','link'], //url, ссылка парсинга товара
								//хотя бы одно указанное поле должно быть обязательным в фиде
								//обязательный параметр


					//'mobileurl': ['','link'], //mobile url, ссылка парсинга товара для мобильных устройств


					'keys': ['','title'],
						//поля, из которых формируются ключевые слова (обычно совпадает с параметром РК header)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//его формирование обычно происходит на основе того же поля, что в параметре(ах) header,
						//иначе, в фикс.значениях и значениях полей не стоит использовать разделители [.,|!()], только пробел,
						//а также нужно учитывать что первые два длинных слова будут по очереди стартовыми в каждом КС
						//то есть, если мы укажем, например, ['коляска прогулочная',['field_name'],'новая']
						//то во всех товарах получим все КС (за исключение цифровых) /+коляска .../ и /+прогулочная .../
					     	//в отличии от других параметров можно указывать массив массивов или функций
						//суммируются все КС всех объявлений и основной настройки РК
						//обязательный параметр (допускается отсутствие keys при наличии masskeys)



					//'masskeys': ['купить киа,(FG-968876),(FG 93458876),(FGS/96855876),', 'forGASmasskeys', ',(FG-3456346),(FG 666666),(FGS/444444)'],
										//массовое добавление КС (только через запятую!!! по всему суммарному значению однотипного варианта)
										//если есть, добавляются в массив КС параметра keys основной РК
										//Если предполагается, что это цифровое КС, то нужно заключать его в скобки (если цифр в нем нет или мало, то КС будет добавлено в обычные КС)
										//Нужно помнить, что разделителем в однотипных вариантах значений является пробел!,
										//поэтому если отсутствует запятая в значениях полей или между полем и фикс. значением, то будет одно слово!
									   //используется с параметрами keys и fixedkeys из основной РК


					//'fixedkeys': ['kia киа хендай', 'forGASfixedkeys'], //дополнительные слова в КС (через пробел и/или запятую)
										//если есть, всегда добавляются во все КС (по одному значению),
											//но никогда не добавляются к ЦБКС
									   //используется с параметрами keys и masskeys из основной РК


					'header': ['','title'],
						//поля, из которых формируются заголовки и пути для объявлений ads-группы товара (обычно это название товара)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//размещается в 2-х заголовках (3-й не используется в объявлениях)
						//Важно! нужно применять параметр field_digitkeys при подготовке исходного поля, если:
							//есть ЦКС в исходных полях и гугл отклоняет объявления с ошибкой "номера телефонов в тексте объявления"
							//либо есть пробелы в ЦБКС в исходных полях, из-за чего эти ЦБКС некрасиво обрезаются и/или переносятся в следующий заголовок
					     	//используется, если закомментирован аналогичный параметр в объявлениях
						//обязательный параметр


					//'paths': ['','title'],
						//поля, из которых формируются пути для объявлений ads-группы товара (обычно это название товара)
						//пути формируются точно также как из параметра header
						//если закомментировано, то используется значение параметра header
					     	//используется, если закомментирован аналогичный параметр в объявлениях


					//'header2': ['Доставка в кратчайшие сроки'],
						//Если отсутсвует 2-й заголовок, то добавляется эта инфа к объявлению во 2-й заголовок (добавляется только 30 символов)
						//Вставляется практически "как есть", без обработки, поэтому внимательно нужно.
						//Если не указан, то добавляется домен, так как 2-й заголовок обязателен



					'price': ['','GASprice'],
						//параметр цены в заголовках и описании
						//должно быть очищено от лишнего (только цена (цифры,запятые,точки), валюта и возможен в конце разделитель[.,|!], можно все без пробелов)
						//Размещается во 2-м заголовке. Перед ценой помещается разделитель " | " (если уже заполнено начало 2-го заголовка) и убирается после цены существующий разделитель [,|!]
						//Размещается в описании. После цены в описании помещается разделитель [,] если нет одного из [.,|!]
						//Если не помещается во 2-м поле заголовка, обрезается полностью в заголовке
						//Если не помещается в полях описания, обрезается полностью в описании вместе с beforeprice



					//'description': ['','description'],
					'description': ['Особопрочная Оригинальная Милитари Одежда для Экстремальных Условий. Выживание, Туризм, Армия, Полиция, Охота, Рыбалка. Фабрика "АРМОЛАЙН". Лучшая Цена, Быстрая Доставка.'],
						//параметр после цены и акции в описании (само описание)
						//В конце автоматически добавляется знак . (если дальше есть завершающий параметр описания и если в конце описания нет одного из [.,|!])
						//Если значение имен полей равно null, то автоматически берется текст из заголовков
						//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания
						//параметр обязателен, если указан requiredescr
					     	//используется, если закомментирован аналогичный параметр в объявлениях


					'afterdescription': ['Заказывайте сейчас!'],
						//параметр после самого описания в описании (завершающий текст описания)
						//Если не помещается в полях описания, обрезается полностью в описании
						//например, "Звоните сейчас!"
					     	//используется, если закомментирован аналогичный параметр в объявлениях


					//Последовательность размещения параметров РК в заголовках объявлений:
					//header, price (price может отсутствовать в заголовках - зависит от priceaddtype)

					//Последовательность размещения параметров в полях описания объявления:
					//startdescription, beforeprice, price, afterprice, description, afterdescription
					//Контролируется наличие одного восклицательного знака во всем описании (останется первый с левой стороны)



					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id0":{


						'priceaddtype': 2, //куда в объявлении вставить цену (если непустое значение параметра price)
							//0 или закомметировано - не добавляем цену в заголовки и описание
							//1 - пытаемся добавить цену в заголовки и описание (только в 1-й заголовок, если указан headerTo1Line)
							//2 - пытаемся добавить цену в заголовки (только в 1-й заголовок, если указан headerTo1Line),
								//если не получилось, то добавляем в описание (не добавляем beforeprice, если не добавляем цену в описание)
							//3 - пытаемся добавить цену в только в заголовки (только в 1-й заголовок, если указан headerTo1Line) (не добавляем beforeprice в описание)
							//4 - пытаемся добавить цену в только в описание



						'beforeprice': ['В наличии по цене'],
							//параметр перед ценой в описании
							//не добавляется в описание, если пустое значение цены
							//В конце автоматически не добавляется знак . что бы можно было вставить типа "По цене от" или "В наличии за"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания



						//'afterprice': ['Лучшая Цена, Быстрая Доставка.'],
							//параметр после цены в описании (акция)
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//например, "Лучшая цена, удобная доставка!"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						//'description': ['','description'],
							//параметр после цены и акции в описании (само описание)
							//если закомментирован, то совпадают с аналогичным параметром РК


						//'afterdescription': ['Заказывайте сейчас!'],
							//параметр после самого описания в описании (завершающий текст описания)
							//если закомментирован, то совпадают с аналогичным параметром РК





					},
					//настройки одного объявления (конец блока)





					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id1":{


						'priceaddtype': 2, //куда в объявлении вставить цену (если непустое значение параметра price)
							//0 или закомметировано - не добавляем цену в заголовки и описание
							//1 - пытаемся добавить цену в заголовки и описание (только в 1-й заголовок, если указан headerTo1Line)
							//2 - пытаемся добавить цену в заголовки (только в 1-й заголовок, если указан headerTo1Line),
								//если не получилось, то добавляем в описание (не добавляем beforeprice, если не добавляем цену в описание)
							//3 - пытаемся добавить цену в только в заголовки (только в 1-й заголовок, если указан headerTo1Line) (не добавляем beforeprice в описание)
							//4 - пытаемся добавить цену в только в описание



						'beforeprice': ['В наличии по цене'],
							//параметр перед ценой в описании
							//не добавляется в описание, если пустое значение цены
							//В конце автоматически не добавляется знак . что бы можно было вставить типа "По цене от" или "В наличии за"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания



						//'afterprice': ['Лучшая Цена, Быстрая Доставка.'],
							//параметр после цены в описании (акция)
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//например, "Лучшая цена, удобная доставка!"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'description': ['Производство Надежной Милитари Одежды для Экстремальных Условий. Выживание, Туризм, Армия, Полиция, Охота, Рыбалка. Фабрика "АРМОЛАЙН". Лучшая Цена, Быстрая Доставка.'],
							//параметр после цены и акции в описании (само описание)
							//если закомментирован, то совпадают с аналогичным параметром РК


						//'afterdescription': ['Заказывайте сейчас!'],
							//параметр после самого описания в описании (завершающий текст описания)
							//если закомментирован, то совпадают с аналогичным параметром РК





					},
					//настройки одного объявления (конец блока)




					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id2":{


						'priceaddtype': 2, //куда в объявлении вставить цену (если непустое значение параметра price)
							//0 или закомметировано - не добавляем цену в заголовки и описание
							//1 - пытаемся добавить цену в заголовки и описание (только в 1-й заголовок, если указан headerTo1Line)
							//2 - пытаемся добавить цену в заголовки (только в 1-й заголовок, если указан headerTo1Line),
								//если не получилось, то добавляем в описание (не добавляем beforeprice, если не добавляем цену в описание)
							//3 - пытаемся добавить цену в только в заголовки (только в 1-й заголовок, если указан headerTo1Line) (не добавляем beforeprice в описание)
							//4 - пытаемся добавить цену в только в описание



						'beforeprice': ['В наличии по цене'],
							//параметр перед ценой в описании
							//не добавляется в описание, если пустое значение цены
							//В конце автоматически не добавляется знак . что бы можно было вставить типа "По цене от" или "В наличии за"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания



						//'afterprice': ['Лучшая Цена, Быстрая Доставка.'],
							//параметр после цены в описании (акция)
							//В конце автоматически добавляется знак . если нет одного из [.,|!].
							//например, "Лучшая цена, удобная доставка!"
							//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания


						'description': ['Оригинальная Милитари Одежда для Экстремальных Условий. Выживание, Туризм, Армия, Полиция, Охота, Рыбалка. Фабрика "АРМОЛАЙН". Лучшая Цена, Быстрая Доставка.'],
							//параметр после цены и акции в описании (само описание)
							//если закомментирован, то совпадают с аналогичным параметром РК


						//'afterdescription': ['Заказывайте сейчас!'],
							//параметр после самого описания в описании (завершающий текст описания)
							//если закомментирован, то совпадают с аналогичным параметром РК





					},
					//настройки одного объявления (конец блока)



			},
			//конец настроек поисковой кампании



		},
		//настройки одного фида (конец блока)






	},
	//настройки сканирования и парсинга одного сайта (конец блока)
]












